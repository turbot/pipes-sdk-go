/*
Turbot Pipes

Turbot Pipes is an intelligence, automation & security platform built specifically for DevOps.

API version: {{OPEN_API_VERSION}}
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pipes

import (
	"encoding/json"
)

// UpdateTenantSettingsRequest struct for UpdateTenantSettingsRequest
type UpdateTenantSettingsRequest struct {
	LoginEmail  *UpdateTenantLoginSettings     `json:"login_email,omitempty"`
	LoginGithub *UpdateTenantLoginSettings     `json:"login_github,omitempty"`
	LoginGoogle *UpdateTenantLoginSettings     `json:"login_google,omitempty"`
	LoginSaml   *UpdateTenantSamlLoginSettings `json:"login_saml,omitempty"`
	// The user provisioning settings for the tenant.
	UserProvisioning *[]string `json:"user_provisioning,omitempty"`
	// The domains that new users are permitted to be provisioned from.
	UserProvisioningPermittedDomains *[]string `json:"user_provisioning_permitted_domains,omitempty"`
}

// NewUpdateTenantSettingsRequest instantiates a new UpdateTenantSettingsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTenantSettingsRequest() *UpdateTenantSettingsRequest {
	this := UpdateTenantSettingsRequest{}
	return &this
}

// NewUpdateTenantSettingsRequestWithDefaults instantiates a new UpdateTenantSettingsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTenantSettingsRequestWithDefaults() *UpdateTenantSettingsRequest {
	this := UpdateTenantSettingsRequest{}
	return &this
}

// GetLoginEmail returns the LoginEmail field value if set, zero value otherwise.
func (o *UpdateTenantSettingsRequest) GetLoginEmail() UpdateTenantLoginSettings {
	if o == nil || o.LoginEmail == nil {
		var ret UpdateTenantLoginSettings
		return ret
	}
	return *o.LoginEmail
}

// GetLoginEmailOk returns a tuple with the LoginEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTenantSettingsRequest) GetLoginEmailOk() (*UpdateTenantLoginSettings, bool) {
	if o == nil || o.LoginEmail == nil {
		return nil, false
	}
	return o.LoginEmail, true
}

// HasLoginEmail returns a boolean if a field has been set.
func (o *UpdateTenantSettingsRequest) HasLoginEmail() bool {
	if o != nil && o.LoginEmail != nil {
		return true
	}

	return false
}

// SetLoginEmail gets a reference to the given UpdateTenantLoginSettings and assigns it to the LoginEmail field.
func (o *UpdateTenantSettingsRequest) SetLoginEmail(v UpdateTenantLoginSettings) {
	o.LoginEmail = &v
}

// GetLoginGithub returns the LoginGithub field value if set, zero value otherwise.
func (o *UpdateTenantSettingsRequest) GetLoginGithub() UpdateTenantLoginSettings {
	if o == nil || o.LoginGithub == nil {
		var ret UpdateTenantLoginSettings
		return ret
	}
	return *o.LoginGithub
}

// GetLoginGithubOk returns a tuple with the LoginGithub field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTenantSettingsRequest) GetLoginGithubOk() (*UpdateTenantLoginSettings, bool) {
	if o == nil || o.LoginGithub == nil {
		return nil, false
	}
	return o.LoginGithub, true
}

// HasLoginGithub returns a boolean if a field has been set.
func (o *UpdateTenantSettingsRequest) HasLoginGithub() bool {
	if o != nil && o.LoginGithub != nil {
		return true
	}

	return false
}

// SetLoginGithub gets a reference to the given UpdateTenantLoginSettings and assigns it to the LoginGithub field.
func (o *UpdateTenantSettingsRequest) SetLoginGithub(v UpdateTenantLoginSettings) {
	o.LoginGithub = &v
}

// GetLoginGoogle returns the LoginGoogle field value if set, zero value otherwise.
func (o *UpdateTenantSettingsRequest) GetLoginGoogle() UpdateTenantLoginSettings {
	if o == nil || o.LoginGoogle == nil {
		var ret UpdateTenantLoginSettings
		return ret
	}
	return *o.LoginGoogle
}

// GetLoginGoogleOk returns a tuple with the LoginGoogle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTenantSettingsRequest) GetLoginGoogleOk() (*UpdateTenantLoginSettings, bool) {
	if o == nil || o.LoginGoogle == nil {
		return nil, false
	}
	return o.LoginGoogle, true
}

// HasLoginGoogle returns a boolean if a field has been set.
func (o *UpdateTenantSettingsRequest) HasLoginGoogle() bool {
	if o != nil && o.LoginGoogle != nil {
		return true
	}

	return false
}

// SetLoginGoogle gets a reference to the given UpdateTenantLoginSettings and assigns it to the LoginGoogle field.
func (o *UpdateTenantSettingsRequest) SetLoginGoogle(v UpdateTenantLoginSettings) {
	o.LoginGoogle = &v
}

// GetLoginSaml returns the LoginSaml field value if set, zero value otherwise.
func (o *UpdateTenantSettingsRequest) GetLoginSaml() UpdateTenantSamlLoginSettings {
	if o == nil || o.LoginSaml == nil {
		var ret UpdateTenantSamlLoginSettings
		return ret
	}
	return *o.LoginSaml
}

// GetLoginSamlOk returns a tuple with the LoginSaml field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTenantSettingsRequest) GetLoginSamlOk() (*UpdateTenantSamlLoginSettings, bool) {
	if o == nil || o.LoginSaml == nil {
		return nil, false
	}
	return o.LoginSaml, true
}

// HasLoginSaml returns a boolean if a field has been set.
func (o *UpdateTenantSettingsRequest) HasLoginSaml() bool {
	if o != nil && o.LoginSaml != nil {
		return true
	}

	return false
}

// SetLoginSaml gets a reference to the given UpdateTenantSamlLoginSettings and assigns it to the LoginSaml field.
func (o *UpdateTenantSettingsRequest) SetLoginSaml(v UpdateTenantSamlLoginSettings) {
	o.LoginSaml = &v
}

// GetUserProvisioning returns the UserProvisioning field value if set, zero value otherwise.
func (o *UpdateTenantSettingsRequest) GetUserProvisioning() []string {
	if o == nil || o.UserProvisioning == nil {
		var ret []string
		return ret
	}
	return *o.UserProvisioning
}

// GetUserProvisioningOk returns a tuple with the UserProvisioning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTenantSettingsRequest) GetUserProvisioningOk() (*[]string, bool) {
	if o == nil || o.UserProvisioning == nil {
		return nil, false
	}
	return o.UserProvisioning, true
}

// HasUserProvisioning returns a boolean if a field has been set.
func (o *UpdateTenantSettingsRequest) HasUserProvisioning() bool {
	if o != nil && o.UserProvisioning != nil {
		return true
	}

	return false
}

// SetUserProvisioning gets a reference to the given []string and assigns it to the UserProvisioning field.
func (o *UpdateTenantSettingsRequest) SetUserProvisioning(v []string) {
	o.UserProvisioning = &v
}

// GetUserProvisioningPermittedDomains returns the UserProvisioningPermittedDomains field value if set, zero value otherwise.
func (o *UpdateTenantSettingsRequest) GetUserProvisioningPermittedDomains() []string {
	if o == nil || o.UserProvisioningPermittedDomains == nil {
		var ret []string
		return ret
	}
	return *o.UserProvisioningPermittedDomains
}

// GetUserProvisioningPermittedDomainsOk returns a tuple with the UserProvisioningPermittedDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTenantSettingsRequest) GetUserProvisioningPermittedDomainsOk() (*[]string, bool) {
	if o == nil || o.UserProvisioningPermittedDomains == nil {
		return nil, false
	}
	return o.UserProvisioningPermittedDomains, true
}

// HasUserProvisioningPermittedDomains returns a boolean if a field has been set.
func (o *UpdateTenantSettingsRequest) HasUserProvisioningPermittedDomains() bool {
	if o != nil && o.UserProvisioningPermittedDomains != nil {
		return true
	}

	return false
}

// SetUserProvisioningPermittedDomains gets a reference to the given []string and assigns it to the UserProvisioningPermittedDomains field.
func (o *UpdateTenantSettingsRequest) SetUserProvisioningPermittedDomains(v []string) {
	o.UserProvisioningPermittedDomains = &v
}

func (o UpdateTenantSettingsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LoginEmail != nil {
		toSerialize["login_email"] = o.LoginEmail
	}
	if o.LoginGithub != nil {
		toSerialize["login_github"] = o.LoginGithub
	}
	if o.LoginGoogle != nil {
		toSerialize["login_google"] = o.LoginGoogle
	}
	if o.LoginSaml != nil {
		toSerialize["login_saml"] = o.LoginSaml
	}
	if o.UserProvisioning != nil {
		toSerialize["user_provisioning"] = o.UserProvisioning
	}
	if o.UserProvisioningPermittedDomains != nil {
		toSerialize["user_provisioning_permitted_domains"] = o.UserProvisioningPermittedDomains
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateTenantSettingsRequest struct {
	value *UpdateTenantSettingsRequest
	isSet bool
}

func (v NullableUpdateTenantSettingsRequest) Get() *UpdateTenantSettingsRequest {
	return v.value
}

func (v *NullableUpdateTenantSettingsRequest) Set(val *UpdateTenantSettingsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTenantSettingsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTenantSettingsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTenantSettingsRequest(val *UpdateTenantSettingsRequest) *NullableUpdateTenantSettingsRequest {
	return &NullableUpdateTenantSettingsRequest{value: val, isSet: true}
}

func (v NullableUpdateTenantSettingsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTenantSettingsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
