/*
Turbot Pipes

Turbot Pipes is an intelligence, automation & security platform built specifically for DevOps.

API version: {{OPEN_API_VERSION}}
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pipes

import (
	"encoding/json"
)

// UpdateTokenRequest struct for UpdateTokenRequest
type UpdateTokenRequest struct {
	Description *string `json:"description,omitempty"`
	Status      string  `json:"status"`
	Title       *string `json:"title,omitempty"`
}

// NewUpdateTokenRequest instantiates a new UpdateTokenRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTokenRequest(status string) *UpdateTokenRequest {
	this := UpdateTokenRequest{}
	this.Status = status
	return &this
}

// NewUpdateTokenRequestWithDefaults instantiates a new UpdateTokenRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTokenRequestWithDefaults() *UpdateTokenRequest {
	this := UpdateTokenRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateTokenRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTokenRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateTokenRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateTokenRequest) SetDescription(v string) {
	o.Description = &v
}

// GetStatus returns the Status field value
func (o *UpdateTokenRequest) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *UpdateTokenRequest) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *UpdateTokenRequest) SetStatus(v string) {
	o.Status = v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *UpdateTokenRequest) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTokenRequest) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *UpdateTokenRequest) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *UpdateTokenRequest) SetTitle(v string) {
	o.Title = &v
}

func (o UpdateTokenRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateTokenRequest struct {
	value *UpdateTokenRequest
	isSet bool
}

func (v NullableUpdateTokenRequest) Get() *UpdateTokenRequest {
	return v.value
}

func (v *NullableUpdateTokenRequest) Set(val *UpdateTokenRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTokenRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTokenRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTokenRequest(val *UpdateTokenRequest) *NullableUpdateTokenRequest {
	return &NullableUpdateTokenRequest{value: val, isSet: true}
}

func (v NullableUpdateTokenRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTokenRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
