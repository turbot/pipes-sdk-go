/*
Turbot Pipes

Turbot Pipes is an intelligence, automation & security platform built specifically for DevOps.

API version: {{OPEN_API_VERSION}}
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pipes

import (
	"encoding/json"
)

// Org struct for Org
type Org struct {
	// The avatar of an org.
	AvatarUrl *string `json:"avatar_url,omitempty"`
	// Struct to store billing information
	Billing *BillingInfo `json:"billing,omitempty"`
	// The time of creation in ISO 8601 UTC.
	CreatedAt string `json:"created_at"`
	// User information for the user who created this.
	CreatedBy *User `json:"created_by,omitempty"`
	// The ID of the user that created this.
	CreatedById string `json:"created_by_id"`
	// The time the item was deleted in ISO 8601 UTC.
	DeletedAt *string `json:"deleted_at,omitempty"`
	// User information for the user that performed the deletion.
	DeletedBy *User `json:"deleted_by,omitempty"`
	// The ID of the user that performed the deletion.
	DeletedById string `json:"deleted_by_id"`
	// The display name of an org.
	DisplayName *string `json:"display_name,omitempty"`
	// The handle name for an org.
	Handle string `json:"handle"`
	// The unique identifier for an org.
	Id string `json:"id"`
	// The unique identifier of the tenant the org belongs to.
	TenantId string `json:"tenant_id"`
	// The time which user and temporary auth tokens must be issued after.
	TokenMinIssuedAt *string `json:"token_min_issued_at,omitempty"`
	// The time of the last update in ISO 8601 UTC.
	UpdatedAt *string `json:"updated_at,omitempty"`
	// User information for the last user to update this.
	UpdatedBy *User `json:"updated_by,omitempty"`
	// The ID of the user that performed the last update.
	UpdatedById           string                        `json:"updated_by_id"`
	Url                   *string                       `json:"url,omitempty"`
	UsageComputeAction    *IdentityUsageThresholdAction `json:"usage_compute_action,omitempty"`
	UsageComputeThreshold *int64                        `json:"usage_compute_threshold,omitempty"`
	UsageStorageAction    *IdentityUsageThresholdAction `json:"usage_storage_action,omitempty"`
	UsageStorageThreshold *int64                        `json:"usage_storage_threshold,omitempty"`
	UsageUserAction       *IdentityUsageThresholdAction `json:"usage_user_action,omitempty"`
	UsageUserThreshold    *int64                        `json:"usage_user_threshold,omitempty"`
	// The version ID of this item. Pass this version ID via an If-Match header when performing mutation operations on the item.
	VersionId int32 `json:"version_id"`
}

// NewOrg instantiates a new Org object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrg(createdAt string, createdById string, deletedById string, handle string, id string, tenantId string, updatedById string, versionId int32) *Org {
	this := Org{}
	this.CreatedAt = createdAt
	this.CreatedById = createdById
	this.DeletedById = deletedById
	this.Handle = handle
	this.Id = id
	this.TenantId = tenantId
	this.UpdatedById = updatedById
	this.VersionId = versionId
	return &this
}

// NewOrgWithDefaults instantiates a new Org object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrgWithDefaults() *Org {
	this := Org{}
	return &this
}

// GetAvatarUrl returns the AvatarUrl field value if set, zero value otherwise.
func (o *Org) GetAvatarUrl() string {
	if o == nil || o.AvatarUrl == nil {
		var ret string
		return ret
	}
	return *o.AvatarUrl
}

// GetAvatarUrlOk returns a tuple with the AvatarUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetAvatarUrlOk() (*string, bool) {
	if o == nil || o.AvatarUrl == nil {
		return nil, false
	}
	return o.AvatarUrl, true
}

// HasAvatarUrl returns a boolean if a field has been set.
func (o *Org) HasAvatarUrl() bool {
	if o != nil && o.AvatarUrl != nil {
		return true
	}

	return false
}

// SetAvatarUrl gets a reference to the given string and assigns it to the AvatarUrl field.
func (o *Org) SetAvatarUrl(v string) {
	o.AvatarUrl = &v
}

// GetBilling returns the Billing field value if set, zero value otherwise.
func (o *Org) GetBilling() BillingInfo {
	if o == nil || o.Billing == nil {
		var ret BillingInfo
		return ret
	}
	return *o.Billing
}

// GetBillingOk returns a tuple with the Billing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetBillingOk() (*BillingInfo, bool) {
	if o == nil || o.Billing == nil {
		return nil, false
	}
	return o.Billing, true
}

// HasBilling returns a boolean if a field has been set.
func (o *Org) HasBilling() bool {
	if o != nil && o.Billing != nil {
		return true
	}

	return false
}

// SetBilling gets a reference to the given BillingInfo and assigns it to the Billing field.
func (o *Org) SetBilling(v BillingInfo) {
	o.Billing = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Org) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Org) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Org) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *Org) GetCreatedBy() User {
	if o == nil || o.CreatedBy == nil {
		var ret User
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetCreatedByOk() (*User, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *Org) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given User and assigns it to the CreatedBy field.
func (o *Org) SetCreatedBy(v User) {
	o.CreatedBy = &v
}

// GetCreatedById returns the CreatedById field value
func (o *Org) GetCreatedById() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedById
}

// GetCreatedByIdOk returns a tuple with the CreatedById field value
// and a boolean to check if the value has been set.
func (o *Org) GetCreatedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedById, true
}

// SetCreatedById sets field value
func (o *Org) SetCreatedById(v string) {
	o.CreatedById = v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *Org) GetDeletedAt() string {
	if o == nil || o.DeletedAt == nil {
		var ret string
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetDeletedAtOk() (*string, bool) {
	if o == nil || o.DeletedAt == nil {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *Org) HasDeletedAt() bool {
	if o != nil && o.DeletedAt != nil {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given string and assigns it to the DeletedAt field.
func (o *Org) SetDeletedAt(v string) {
	o.DeletedAt = &v
}

// GetDeletedBy returns the DeletedBy field value if set, zero value otherwise.
func (o *Org) GetDeletedBy() User {
	if o == nil || o.DeletedBy == nil {
		var ret User
		return ret
	}
	return *o.DeletedBy
}

// GetDeletedByOk returns a tuple with the DeletedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetDeletedByOk() (*User, bool) {
	if o == nil || o.DeletedBy == nil {
		return nil, false
	}
	return o.DeletedBy, true
}

// HasDeletedBy returns a boolean if a field has been set.
func (o *Org) HasDeletedBy() bool {
	if o != nil && o.DeletedBy != nil {
		return true
	}

	return false
}

// SetDeletedBy gets a reference to the given User and assigns it to the DeletedBy field.
func (o *Org) SetDeletedBy(v User) {
	o.DeletedBy = &v
}

// GetDeletedById returns the DeletedById field value
func (o *Org) GetDeletedById() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeletedById
}

// GetDeletedByIdOk returns a tuple with the DeletedById field value
// and a boolean to check if the value has been set.
func (o *Org) GetDeletedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeletedById, true
}

// SetDeletedById sets field value
func (o *Org) SetDeletedById(v string) {
	o.DeletedById = v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *Org) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *Org) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *Org) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetHandle returns the Handle field value
func (o *Org) GetHandle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Handle
}

// GetHandleOk returns a tuple with the Handle field value
// and a boolean to check if the value has been set.
func (o *Org) GetHandleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Handle, true
}

// SetHandle sets field value
func (o *Org) SetHandle(v string) {
	o.Handle = v
}

// GetId returns the Id field value
func (o *Org) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Org) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Org) SetId(v string) {
	o.Id = v
}

// GetTenantId returns the TenantId field value
func (o *Org) GetTenantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value
// and a boolean to check if the value has been set.
func (o *Org) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TenantId, true
}

// SetTenantId sets field value
func (o *Org) SetTenantId(v string) {
	o.TenantId = v
}

// GetTokenMinIssuedAt returns the TokenMinIssuedAt field value if set, zero value otherwise.
func (o *Org) GetTokenMinIssuedAt() string {
	if o == nil || o.TokenMinIssuedAt == nil {
		var ret string
		return ret
	}
	return *o.TokenMinIssuedAt
}

// GetTokenMinIssuedAtOk returns a tuple with the TokenMinIssuedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetTokenMinIssuedAtOk() (*string, bool) {
	if o == nil || o.TokenMinIssuedAt == nil {
		return nil, false
	}
	return o.TokenMinIssuedAt, true
}

// HasTokenMinIssuedAt returns a boolean if a field has been set.
func (o *Org) HasTokenMinIssuedAt() bool {
	if o != nil && o.TokenMinIssuedAt != nil {
		return true
	}

	return false
}

// SetTokenMinIssuedAt gets a reference to the given string and assigns it to the TokenMinIssuedAt field.
func (o *Org) SetTokenMinIssuedAt(v string) {
	o.TokenMinIssuedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Org) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Org) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *Org) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *Org) GetUpdatedBy() User {
	if o == nil || o.UpdatedBy == nil {
		var ret User
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetUpdatedByOk() (*User, bool) {
	if o == nil || o.UpdatedBy == nil {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *Org) HasUpdatedBy() bool {
	if o != nil && o.UpdatedBy != nil {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given User and assigns it to the UpdatedBy field.
func (o *Org) SetUpdatedBy(v User) {
	o.UpdatedBy = &v
}

// GetUpdatedById returns the UpdatedById field value
func (o *Org) GetUpdatedById() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedById
}

// GetUpdatedByIdOk returns a tuple with the UpdatedById field value
// and a boolean to check if the value has been set.
func (o *Org) GetUpdatedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedById, true
}

// SetUpdatedById sets field value
func (o *Org) SetUpdatedById(v string) {
	o.UpdatedById = v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *Org) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *Org) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *Org) SetUrl(v string) {
	o.Url = &v
}

// GetUsageComputeAction returns the UsageComputeAction field value if set, zero value otherwise.
func (o *Org) GetUsageComputeAction() IdentityUsageThresholdAction {
	if o == nil || o.UsageComputeAction == nil {
		var ret IdentityUsageThresholdAction
		return ret
	}
	return *o.UsageComputeAction
}

// GetUsageComputeActionOk returns a tuple with the UsageComputeAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetUsageComputeActionOk() (*IdentityUsageThresholdAction, bool) {
	if o == nil || o.UsageComputeAction == nil {
		return nil, false
	}
	return o.UsageComputeAction, true
}

// HasUsageComputeAction returns a boolean if a field has been set.
func (o *Org) HasUsageComputeAction() bool {
	if o != nil && o.UsageComputeAction != nil {
		return true
	}

	return false
}

// SetUsageComputeAction gets a reference to the given IdentityUsageThresholdAction and assigns it to the UsageComputeAction field.
func (o *Org) SetUsageComputeAction(v IdentityUsageThresholdAction) {
	o.UsageComputeAction = &v
}

// GetUsageComputeThreshold returns the UsageComputeThreshold field value if set, zero value otherwise.
func (o *Org) GetUsageComputeThreshold() int64 {
	if o == nil || o.UsageComputeThreshold == nil {
		var ret int64
		return ret
	}
	return *o.UsageComputeThreshold
}

// GetUsageComputeThresholdOk returns a tuple with the UsageComputeThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetUsageComputeThresholdOk() (*int64, bool) {
	if o == nil || o.UsageComputeThreshold == nil {
		return nil, false
	}
	return o.UsageComputeThreshold, true
}

// HasUsageComputeThreshold returns a boolean if a field has been set.
func (o *Org) HasUsageComputeThreshold() bool {
	if o != nil && o.UsageComputeThreshold != nil {
		return true
	}

	return false
}

// SetUsageComputeThreshold gets a reference to the given int64 and assigns it to the UsageComputeThreshold field.
func (o *Org) SetUsageComputeThreshold(v int64) {
	o.UsageComputeThreshold = &v
}

// GetUsageStorageAction returns the UsageStorageAction field value if set, zero value otherwise.
func (o *Org) GetUsageStorageAction() IdentityUsageThresholdAction {
	if o == nil || o.UsageStorageAction == nil {
		var ret IdentityUsageThresholdAction
		return ret
	}
	return *o.UsageStorageAction
}

// GetUsageStorageActionOk returns a tuple with the UsageStorageAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetUsageStorageActionOk() (*IdentityUsageThresholdAction, bool) {
	if o == nil || o.UsageStorageAction == nil {
		return nil, false
	}
	return o.UsageStorageAction, true
}

// HasUsageStorageAction returns a boolean if a field has been set.
func (o *Org) HasUsageStorageAction() bool {
	if o != nil && o.UsageStorageAction != nil {
		return true
	}

	return false
}

// SetUsageStorageAction gets a reference to the given IdentityUsageThresholdAction and assigns it to the UsageStorageAction field.
func (o *Org) SetUsageStorageAction(v IdentityUsageThresholdAction) {
	o.UsageStorageAction = &v
}

// GetUsageStorageThreshold returns the UsageStorageThreshold field value if set, zero value otherwise.
func (o *Org) GetUsageStorageThreshold() int64 {
	if o == nil || o.UsageStorageThreshold == nil {
		var ret int64
		return ret
	}
	return *o.UsageStorageThreshold
}

// GetUsageStorageThresholdOk returns a tuple with the UsageStorageThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetUsageStorageThresholdOk() (*int64, bool) {
	if o == nil || o.UsageStorageThreshold == nil {
		return nil, false
	}
	return o.UsageStorageThreshold, true
}

// HasUsageStorageThreshold returns a boolean if a field has been set.
func (o *Org) HasUsageStorageThreshold() bool {
	if o != nil && o.UsageStorageThreshold != nil {
		return true
	}

	return false
}

// SetUsageStorageThreshold gets a reference to the given int64 and assigns it to the UsageStorageThreshold field.
func (o *Org) SetUsageStorageThreshold(v int64) {
	o.UsageStorageThreshold = &v
}

// GetUsageUserAction returns the UsageUserAction field value if set, zero value otherwise.
func (o *Org) GetUsageUserAction() IdentityUsageThresholdAction {
	if o == nil || o.UsageUserAction == nil {
		var ret IdentityUsageThresholdAction
		return ret
	}
	return *o.UsageUserAction
}

// GetUsageUserActionOk returns a tuple with the UsageUserAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetUsageUserActionOk() (*IdentityUsageThresholdAction, bool) {
	if o == nil || o.UsageUserAction == nil {
		return nil, false
	}
	return o.UsageUserAction, true
}

// HasUsageUserAction returns a boolean if a field has been set.
func (o *Org) HasUsageUserAction() bool {
	if o != nil && o.UsageUserAction != nil {
		return true
	}

	return false
}

// SetUsageUserAction gets a reference to the given IdentityUsageThresholdAction and assigns it to the UsageUserAction field.
func (o *Org) SetUsageUserAction(v IdentityUsageThresholdAction) {
	o.UsageUserAction = &v
}

// GetUsageUserThreshold returns the UsageUserThreshold field value if set, zero value otherwise.
func (o *Org) GetUsageUserThreshold() int64 {
	if o == nil || o.UsageUserThreshold == nil {
		var ret int64
		return ret
	}
	return *o.UsageUserThreshold
}

// GetUsageUserThresholdOk returns a tuple with the UsageUserThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Org) GetUsageUserThresholdOk() (*int64, bool) {
	if o == nil || o.UsageUserThreshold == nil {
		return nil, false
	}
	return o.UsageUserThreshold, true
}

// HasUsageUserThreshold returns a boolean if a field has been set.
func (o *Org) HasUsageUserThreshold() bool {
	if o != nil && o.UsageUserThreshold != nil {
		return true
	}

	return false
}

// SetUsageUserThreshold gets a reference to the given int64 and assigns it to the UsageUserThreshold field.
func (o *Org) SetUsageUserThreshold(v int64) {
	o.UsageUserThreshold = &v
}

// GetVersionId returns the VersionId field value
func (o *Org) GetVersionId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.VersionId
}

// GetVersionIdOk returns a tuple with the VersionId field value
// and a boolean to check if the value has been set.
func (o *Org) GetVersionIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VersionId, true
}

// SetVersionId sets field value
func (o *Org) SetVersionId(v int32) {
	o.VersionId = v
}

func (o Org) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AvatarUrl != nil {
		toSerialize["avatar_url"] = o.AvatarUrl
	}
	if o.Billing != nil {
		toSerialize["billing"] = o.Billing
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.CreatedBy != nil {
		toSerialize["created_by"] = o.CreatedBy
	}
	if true {
		toSerialize["created_by_id"] = o.CreatedById
	}
	if o.DeletedAt != nil {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if o.DeletedBy != nil {
		toSerialize["deleted_by"] = o.DeletedBy
	}
	if true {
		toSerialize["deleted_by_id"] = o.DeletedById
	}
	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	if true {
		toSerialize["handle"] = o.Handle
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["tenant_id"] = o.TenantId
	}
	if o.TokenMinIssuedAt != nil {
		toSerialize["token_min_issued_at"] = o.TokenMinIssuedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.UpdatedBy != nil {
		toSerialize["updated_by"] = o.UpdatedBy
	}
	if true {
		toSerialize["updated_by_id"] = o.UpdatedById
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.UsageComputeAction != nil {
		toSerialize["usage_compute_action"] = o.UsageComputeAction
	}
	if o.UsageComputeThreshold != nil {
		toSerialize["usage_compute_threshold"] = o.UsageComputeThreshold
	}
	if o.UsageStorageAction != nil {
		toSerialize["usage_storage_action"] = o.UsageStorageAction
	}
	if o.UsageStorageThreshold != nil {
		toSerialize["usage_storage_threshold"] = o.UsageStorageThreshold
	}
	if o.UsageUserAction != nil {
		toSerialize["usage_user_action"] = o.UsageUserAction
	}
	if o.UsageUserThreshold != nil {
		toSerialize["usage_user_threshold"] = o.UsageUserThreshold
	}
	if true {
		toSerialize["version_id"] = o.VersionId
	}
	return json.Marshal(toSerialize)
}

type NullableOrg struct {
	value *Org
	isSet bool
}

func (v NullableOrg) Get() *Org {
	return v.value
}

func (v *NullableOrg) Set(val *Org) {
	v.value = val
	v.isSet = true
}

func (v NullableOrg) IsSet() bool {
	return v.isSet
}

func (v *NullableOrg) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrg(val *Org) *NullableOrg {
	return &NullableOrg{value: val, isSet: true}
}

func (v NullableOrg) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrg) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
