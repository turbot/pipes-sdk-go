/*
Turbot Pipes

Turbot Pipes is an intelligence, automation & security platform built specifically for DevOps.

API version: {{OPEN_API_VERSION}}
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pipes

import (
	"encoding/json"
)

// Tenant struct for Tenant
type Tenant struct {
	AvatarUrl *string      `json:"avatar_url,omitempty"`
	Billing   *BillingInfo `json:"billing,omitempty"`
	// The time of creation in ISO 8601 UTC.
	CreatedAt string `json:"created_at"`
	CreatedBy *User  `json:"created_by,omitempty"`
	// The ID of the user that created this.
	CreatedById string `json:"created_by_id"`
	// The time the item was deleted in ISO 8601 UTC.
	DeletedAt *string `json:"deleted_at,omitempty"`
	DeletedBy *User   `json:"deleted_by,omitempty"`
	// The ID of the user that performed the deletion.
	DeletedById string `json:"deleted_by_id"`
	// The display name of the tenant.
	DisplayName *string `json:"display_name,omitempty"`
	// The handle name of the tenant.
	Handle string `json:"handle"`
	// The unique identifier of the tenant.
	Id string `json:"id"`
	// The state of the tenant.
	State *string `json:"state,omitempty"`
	// The time of the last update in ISO 8601 UTC.
	UpdatedAt *string `json:"updated_at,omitempty"`
	UpdatedBy *User   `json:"updated_by,omitempty"`
	// The ID of the user that performed the last update.
	UpdatedById           string  `json:"updated_by_id"`
	UsageComputeAction    *string `json:"usage_compute_action,omitempty"`
	UsageComputeThreshold *int64  `json:"usage_compute_threshold,omitempty"`
	UsageStorageAction    *string `json:"usage_storage_action,omitempty"`
	UsageStorageThreshold *int64  `json:"usage_storage_threshold,omitempty"`
	UsageUserAction       *string `json:"usage_user_action,omitempty"`
	UsageUserThreshold    *int32  `json:"usage_user_threshold,omitempty"`
	// The version ID of this item. Pass this version ID via an If-Match header when performing mutation operations on the item.
	VersionId int32 `json:"version_id"`
}

// NewTenant instantiates a new Tenant object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTenant(createdAt string, createdById string, deletedById string, handle string, id string, updatedById string, versionId int32) *Tenant {
	this := Tenant{}
	this.CreatedAt = createdAt
	this.CreatedById = createdById
	this.DeletedById = deletedById
	this.Handle = handle
	this.Id = id
	this.UpdatedById = updatedById
	this.VersionId = versionId
	return &this
}

// NewTenantWithDefaults instantiates a new Tenant object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenantWithDefaults() *Tenant {
	this := Tenant{}
	return &this
}

// GetAvatarUrl returns the AvatarUrl field value if set, zero value otherwise.
func (o *Tenant) GetAvatarUrl() string {
	if o == nil || o.AvatarUrl == nil {
		var ret string
		return ret
	}
	return *o.AvatarUrl
}

// GetAvatarUrlOk returns a tuple with the AvatarUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetAvatarUrlOk() (*string, bool) {
	if o == nil || o.AvatarUrl == nil {
		return nil, false
	}
	return o.AvatarUrl, true
}

// HasAvatarUrl returns a boolean if a field has been set.
func (o *Tenant) HasAvatarUrl() bool {
	if o != nil && o.AvatarUrl != nil {
		return true
	}

	return false
}

// SetAvatarUrl gets a reference to the given string and assigns it to the AvatarUrl field.
func (o *Tenant) SetAvatarUrl(v string) {
	o.AvatarUrl = &v
}

// GetBilling returns the Billing field value if set, zero value otherwise.
func (o *Tenant) GetBilling() BillingInfo {
	if o == nil || o.Billing == nil {
		var ret BillingInfo
		return ret
	}
	return *o.Billing
}

// GetBillingOk returns a tuple with the Billing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetBillingOk() (*BillingInfo, bool) {
	if o == nil || o.Billing == nil {
		return nil, false
	}
	return o.Billing, true
}

// HasBilling returns a boolean if a field has been set.
func (o *Tenant) HasBilling() bool {
	if o != nil && o.Billing != nil {
		return true
	}

	return false
}

// SetBilling gets a reference to the given BillingInfo and assigns it to the Billing field.
func (o *Tenant) SetBilling(v BillingInfo) {
	o.Billing = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Tenant) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Tenant) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Tenant) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *Tenant) GetCreatedBy() User {
	if o == nil || o.CreatedBy == nil {
		var ret User
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetCreatedByOk() (*User, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *Tenant) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given User and assigns it to the CreatedBy field.
func (o *Tenant) SetCreatedBy(v User) {
	o.CreatedBy = &v
}

// GetCreatedById returns the CreatedById field value
func (o *Tenant) GetCreatedById() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedById
}

// GetCreatedByIdOk returns a tuple with the CreatedById field value
// and a boolean to check if the value has been set.
func (o *Tenant) GetCreatedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedById, true
}

// SetCreatedById sets field value
func (o *Tenant) SetCreatedById(v string) {
	o.CreatedById = v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *Tenant) GetDeletedAt() string {
	if o == nil || o.DeletedAt == nil {
		var ret string
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetDeletedAtOk() (*string, bool) {
	if o == nil || o.DeletedAt == nil {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *Tenant) HasDeletedAt() bool {
	if o != nil && o.DeletedAt != nil {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given string and assigns it to the DeletedAt field.
func (o *Tenant) SetDeletedAt(v string) {
	o.DeletedAt = &v
}

// GetDeletedBy returns the DeletedBy field value if set, zero value otherwise.
func (o *Tenant) GetDeletedBy() User {
	if o == nil || o.DeletedBy == nil {
		var ret User
		return ret
	}
	return *o.DeletedBy
}

// GetDeletedByOk returns a tuple with the DeletedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetDeletedByOk() (*User, bool) {
	if o == nil || o.DeletedBy == nil {
		return nil, false
	}
	return o.DeletedBy, true
}

// HasDeletedBy returns a boolean if a field has been set.
func (o *Tenant) HasDeletedBy() bool {
	if o != nil && o.DeletedBy != nil {
		return true
	}

	return false
}

// SetDeletedBy gets a reference to the given User and assigns it to the DeletedBy field.
func (o *Tenant) SetDeletedBy(v User) {
	o.DeletedBy = &v
}

// GetDeletedById returns the DeletedById field value
func (o *Tenant) GetDeletedById() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeletedById
}

// GetDeletedByIdOk returns a tuple with the DeletedById field value
// and a boolean to check if the value has been set.
func (o *Tenant) GetDeletedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeletedById, true
}

// SetDeletedById sets field value
func (o *Tenant) SetDeletedById(v string) {
	o.DeletedById = v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *Tenant) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *Tenant) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *Tenant) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetHandle returns the Handle field value
func (o *Tenant) GetHandle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Handle
}

// GetHandleOk returns a tuple with the Handle field value
// and a boolean to check if the value has been set.
func (o *Tenant) GetHandleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Handle, true
}

// SetHandle sets field value
func (o *Tenant) SetHandle(v string) {
	o.Handle = v
}

// GetId returns the Id field value
func (o *Tenant) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Tenant) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Tenant) SetId(v string) {
	o.Id = v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Tenant) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Tenant) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *Tenant) SetState(v string) {
	o.State = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Tenant) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Tenant) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *Tenant) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *Tenant) GetUpdatedBy() User {
	if o == nil || o.UpdatedBy == nil {
		var ret User
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetUpdatedByOk() (*User, bool) {
	if o == nil || o.UpdatedBy == nil {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *Tenant) HasUpdatedBy() bool {
	if o != nil && o.UpdatedBy != nil {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given User and assigns it to the UpdatedBy field.
func (o *Tenant) SetUpdatedBy(v User) {
	o.UpdatedBy = &v
}

// GetUpdatedById returns the UpdatedById field value
func (o *Tenant) GetUpdatedById() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedById
}

// GetUpdatedByIdOk returns a tuple with the UpdatedById field value
// and a boolean to check if the value has been set.
func (o *Tenant) GetUpdatedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedById, true
}

// SetUpdatedById sets field value
func (o *Tenant) SetUpdatedById(v string) {
	o.UpdatedById = v
}

// GetUsageComputeAction returns the UsageComputeAction field value if set, zero value otherwise.
func (o *Tenant) GetUsageComputeAction() string {
	if o == nil || o.UsageComputeAction == nil {
		var ret string
		return ret
	}
	return *o.UsageComputeAction
}

// GetUsageComputeActionOk returns a tuple with the UsageComputeAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetUsageComputeActionOk() (*string, bool) {
	if o == nil || o.UsageComputeAction == nil {
		return nil, false
	}
	return o.UsageComputeAction, true
}

// HasUsageComputeAction returns a boolean if a field has been set.
func (o *Tenant) HasUsageComputeAction() bool {
	if o != nil && o.UsageComputeAction != nil {
		return true
	}

	return false
}

// SetUsageComputeAction gets a reference to the given string and assigns it to the UsageComputeAction field.
func (o *Tenant) SetUsageComputeAction(v string) {
	o.UsageComputeAction = &v
}

// GetUsageComputeThreshold returns the UsageComputeThreshold field value if set, zero value otherwise.
func (o *Tenant) GetUsageComputeThreshold() int64 {
	if o == nil || o.UsageComputeThreshold == nil {
		var ret int64
		return ret
	}
	return *o.UsageComputeThreshold
}

// GetUsageComputeThresholdOk returns a tuple with the UsageComputeThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetUsageComputeThresholdOk() (*int64, bool) {
	if o == nil || o.UsageComputeThreshold == nil {
		return nil, false
	}
	return o.UsageComputeThreshold, true
}

// HasUsageComputeThreshold returns a boolean if a field has been set.
func (o *Tenant) HasUsageComputeThreshold() bool {
	if o != nil && o.UsageComputeThreshold != nil {
		return true
	}

	return false
}

// SetUsageComputeThreshold gets a reference to the given int64 and assigns it to the UsageComputeThreshold field.
func (o *Tenant) SetUsageComputeThreshold(v int64) {
	o.UsageComputeThreshold = &v
}

// GetUsageStorageAction returns the UsageStorageAction field value if set, zero value otherwise.
func (o *Tenant) GetUsageStorageAction() string {
	if o == nil || o.UsageStorageAction == nil {
		var ret string
		return ret
	}
	return *o.UsageStorageAction
}

// GetUsageStorageActionOk returns a tuple with the UsageStorageAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetUsageStorageActionOk() (*string, bool) {
	if o == nil || o.UsageStorageAction == nil {
		return nil, false
	}
	return o.UsageStorageAction, true
}

// HasUsageStorageAction returns a boolean if a field has been set.
func (o *Tenant) HasUsageStorageAction() bool {
	if o != nil && o.UsageStorageAction != nil {
		return true
	}

	return false
}

// SetUsageStorageAction gets a reference to the given string and assigns it to the UsageStorageAction field.
func (o *Tenant) SetUsageStorageAction(v string) {
	o.UsageStorageAction = &v
}

// GetUsageStorageThreshold returns the UsageStorageThreshold field value if set, zero value otherwise.
func (o *Tenant) GetUsageStorageThreshold() int64 {
	if o == nil || o.UsageStorageThreshold == nil {
		var ret int64
		return ret
	}
	return *o.UsageStorageThreshold
}

// GetUsageStorageThresholdOk returns a tuple with the UsageStorageThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetUsageStorageThresholdOk() (*int64, bool) {
	if o == nil || o.UsageStorageThreshold == nil {
		return nil, false
	}
	return o.UsageStorageThreshold, true
}

// HasUsageStorageThreshold returns a boolean if a field has been set.
func (o *Tenant) HasUsageStorageThreshold() bool {
	if o != nil && o.UsageStorageThreshold != nil {
		return true
	}

	return false
}

// SetUsageStorageThreshold gets a reference to the given int64 and assigns it to the UsageStorageThreshold field.
func (o *Tenant) SetUsageStorageThreshold(v int64) {
	o.UsageStorageThreshold = &v
}

// GetUsageUserAction returns the UsageUserAction field value if set, zero value otherwise.
func (o *Tenant) GetUsageUserAction() string {
	if o == nil || o.UsageUserAction == nil {
		var ret string
		return ret
	}
	return *o.UsageUserAction
}

// GetUsageUserActionOk returns a tuple with the UsageUserAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetUsageUserActionOk() (*string, bool) {
	if o == nil || o.UsageUserAction == nil {
		return nil, false
	}
	return o.UsageUserAction, true
}

// HasUsageUserAction returns a boolean if a field has been set.
func (o *Tenant) HasUsageUserAction() bool {
	if o != nil && o.UsageUserAction != nil {
		return true
	}

	return false
}

// SetUsageUserAction gets a reference to the given string and assigns it to the UsageUserAction field.
func (o *Tenant) SetUsageUserAction(v string) {
	o.UsageUserAction = &v
}

// GetUsageUserThreshold returns the UsageUserThreshold field value if set, zero value otherwise.
func (o *Tenant) GetUsageUserThreshold() int32 {
	if o == nil || o.UsageUserThreshold == nil {
		var ret int32
		return ret
	}
	return *o.UsageUserThreshold
}

// GetUsageUserThresholdOk returns a tuple with the UsageUserThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Tenant) GetUsageUserThresholdOk() (*int32, bool) {
	if o == nil || o.UsageUserThreshold == nil {
		return nil, false
	}
	return o.UsageUserThreshold, true
}

// HasUsageUserThreshold returns a boolean if a field has been set.
func (o *Tenant) HasUsageUserThreshold() bool {
	if o != nil && o.UsageUserThreshold != nil {
		return true
	}

	return false
}

// SetUsageUserThreshold gets a reference to the given int32 and assigns it to the UsageUserThreshold field.
func (o *Tenant) SetUsageUserThreshold(v int32) {
	o.UsageUserThreshold = &v
}

// GetVersionId returns the VersionId field value
func (o *Tenant) GetVersionId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.VersionId
}

// GetVersionIdOk returns a tuple with the VersionId field value
// and a boolean to check if the value has been set.
func (o *Tenant) GetVersionIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VersionId, true
}

// SetVersionId sets field value
func (o *Tenant) SetVersionId(v int32) {
	o.VersionId = v
}

func (o Tenant) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AvatarUrl != nil {
		toSerialize["avatar_url"] = o.AvatarUrl
	}
	if o.Billing != nil {
		toSerialize["billing"] = o.Billing
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.CreatedBy != nil {
		toSerialize["created_by"] = o.CreatedBy
	}
	if true {
		toSerialize["created_by_id"] = o.CreatedById
	}
	if o.DeletedAt != nil {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if o.DeletedBy != nil {
		toSerialize["deleted_by"] = o.DeletedBy
	}
	if true {
		toSerialize["deleted_by_id"] = o.DeletedById
	}
	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	if true {
		toSerialize["handle"] = o.Handle
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.UpdatedBy != nil {
		toSerialize["updated_by"] = o.UpdatedBy
	}
	if true {
		toSerialize["updated_by_id"] = o.UpdatedById
	}
	if o.UsageComputeAction != nil {
		toSerialize["usage_compute_action"] = o.UsageComputeAction
	}
	if o.UsageComputeThreshold != nil {
		toSerialize["usage_compute_threshold"] = o.UsageComputeThreshold
	}
	if o.UsageStorageAction != nil {
		toSerialize["usage_storage_action"] = o.UsageStorageAction
	}
	if o.UsageStorageThreshold != nil {
		toSerialize["usage_storage_threshold"] = o.UsageStorageThreshold
	}
	if o.UsageUserAction != nil {
		toSerialize["usage_user_action"] = o.UsageUserAction
	}
	if o.UsageUserThreshold != nil {
		toSerialize["usage_user_threshold"] = o.UsageUserThreshold
	}
	if true {
		toSerialize["version_id"] = o.VersionId
	}
	return json.Marshal(toSerialize)
}

type NullableTenant struct {
	value *Tenant
	isSet bool
}

func (v NullableTenant) Get() *Tenant {
	return v.value
}

func (v *NullableTenant) Set(val *Tenant) {
	v.value = val
	v.isSet = true
}

func (v NullableTenant) IsSet() bool {
	return v.isSet
}

func (v *NullableTenant) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenant(val *Tenant) *NullableTenant {
	return &NullableTenant{value: val, isSet: true}
}

func (v NullableTenant) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenant) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
