/*
Turbot Pipes

Turbot Pipes is an intelligence, automation & security platform built specifically for DevOps.

API version: {{OPEN_API_VERSION}}
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pipes

import (
	"encoding/json"
)

// CreateOrgUserRequest struct for CreateOrgUserRequest
type CreateOrgUserRequest struct {
	Handle string `json:"handle"`
	Role   string `json:"role"`
}

// NewCreateOrgUserRequest instantiates a new CreateOrgUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrgUserRequest(handle string, role string) *CreateOrgUserRequest {
	this := CreateOrgUserRequest{}
	this.Handle = handle
	this.Role = role
	return &this
}

// NewCreateOrgUserRequestWithDefaults instantiates a new CreateOrgUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrgUserRequestWithDefaults() *CreateOrgUserRequest {
	this := CreateOrgUserRequest{}
	return &this
}

// GetHandle returns the Handle field value
func (o *CreateOrgUserRequest) GetHandle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Handle
}

// GetHandleOk returns a tuple with the Handle field value
// and a boolean to check if the value has been set.
func (o *CreateOrgUserRequest) GetHandleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Handle, true
}

// SetHandle sets field value
func (o *CreateOrgUserRequest) SetHandle(v string) {
	o.Handle = v
}

// GetRole returns the Role field value
func (o *CreateOrgUserRequest) GetRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *CreateOrgUserRequest) GetRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *CreateOrgUserRequest) SetRole(v string) {
	o.Role = v
}

func (o CreateOrgUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["handle"] = o.Handle
	}
	if true {
		toSerialize["role"] = o.Role
	}
	return json.Marshal(toSerialize)
}

type NullableCreateOrgUserRequest struct {
	value *CreateOrgUserRequest
	isSet bool
}

func (v NullableCreateOrgUserRequest) Get() *CreateOrgUserRequest {
	return v.value
}

func (v *NullableCreateOrgUserRequest) Set(val *CreateOrgUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrgUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrgUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrgUserRequest(val *CreateOrgUserRequest) *NullableCreateOrgUserRequest {
	return &NullableCreateOrgUserRequest{value: val, isSet: true}
}

func (v NullableCreateOrgUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrgUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
