/*
Turbot Pipes

Turbot Pipes is an intelligence, automation & security platform built specifically for DevOps.

API version: {{OPEN_API_VERSION}}
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pipes

import (
	"encoding/json"
)

// BillingInvoice struct for BillingInvoice
type BillingInvoice struct {
	AttemptCount       *int32  `json:"attempt_count,omitempty"`
	Attempted          *bool   `json:"attempted,omitempty"`
	BillingReason      *string `json:"billing_reason,omitempty"`
	CreatedAt          string  `json:"created_at"`
	Currency           *string `json:"currency,omitempty"`
	HostedInvoiceUrl   *string `json:"hosted_invoice_url,omitempty"`
	Id                 *string `json:"id,omitempty"`
	InvoicePdf         *string `json:"invoice_pdf,omitempty"`
	NextPaymentAttempt string  `json:"next_payment_attempt"`
	PeriodEnd          string  `json:"period_end"`
	PeriodStart        string  `json:"period_start"`
	ReceiptNumber      *string `json:"receipt_number,omitempty"`
	Status             *string `json:"status,omitempty"`
	Total              *int32  `json:"total,omitempty"`
}

// NewBillingInvoice instantiates a new BillingInvoice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingInvoice(createdAt string, nextPaymentAttempt string, periodEnd string, periodStart string) *BillingInvoice {
	this := BillingInvoice{}
	this.CreatedAt = createdAt
	this.NextPaymentAttempt = nextPaymentAttempt
	this.PeriodEnd = periodEnd
	this.PeriodStart = periodStart
	return &this
}

// NewBillingInvoiceWithDefaults instantiates a new BillingInvoice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingInvoiceWithDefaults() *BillingInvoice {
	this := BillingInvoice{}
	return &this
}

// GetAttemptCount returns the AttemptCount field value if set, zero value otherwise.
func (o *BillingInvoice) GetAttemptCount() int32 {
	if o == nil || o.AttemptCount == nil {
		var ret int32
		return ret
	}
	return *o.AttemptCount
}

// GetAttemptCountOk returns a tuple with the AttemptCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoice) GetAttemptCountOk() (*int32, bool) {
	if o == nil || o.AttemptCount == nil {
		return nil, false
	}
	return o.AttemptCount, true
}

// HasAttemptCount returns a boolean if a field has been set.
func (o *BillingInvoice) HasAttemptCount() bool {
	if o != nil && o.AttemptCount != nil {
		return true
	}

	return false
}

// SetAttemptCount gets a reference to the given int32 and assigns it to the AttemptCount field.
func (o *BillingInvoice) SetAttemptCount(v int32) {
	o.AttemptCount = &v
}

// GetAttempted returns the Attempted field value if set, zero value otherwise.
func (o *BillingInvoice) GetAttempted() bool {
	if o == nil || o.Attempted == nil {
		var ret bool
		return ret
	}
	return *o.Attempted
}

// GetAttemptedOk returns a tuple with the Attempted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoice) GetAttemptedOk() (*bool, bool) {
	if o == nil || o.Attempted == nil {
		return nil, false
	}
	return o.Attempted, true
}

// HasAttempted returns a boolean if a field has been set.
func (o *BillingInvoice) HasAttempted() bool {
	if o != nil && o.Attempted != nil {
		return true
	}

	return false
}

// SetAttempted gets a reference to the given bool and assigns it to the Attempted field.
func (o *BillingInvoice) SetAttempted(v bool) {
	o.Attempted = &v
}

// GetBillingReason returns the BillingReason field value if set, zero value otherwise.
func (o *BillingInvoice) GetBillingReason() string {
	if o == nil || o.BillingReason == nil {
		var ret string
		return ret
	}
	return *o.BillingReason
}

// GetBillingReasonOk returns a tuple with the BillingReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoice) GetBillingReasonOk() (*string, bool) {
	if o == nil || o.BillingReason == nil {
		return nil, false
	}
	return o.BillingReason, true
}

// HasBillingReason returns a boolean if a field has been set.
func (o *BillingInvoice) HasBillingReason() bool {
	if o != nil && o.BillingReason != nil {
		return true
	}

	return false
}

// SetBillingReason gets a reference to the given string and assigns it to the BillingReason field.
func (o *BillingInvoice) SetBillingReason(v string) {
	o.BillingReason = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *BillingInvoice) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *BillingInvoice) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *BillingInvoice) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *BillingInvoice) GetCurrency() string {
	if o == nil || o.Currency == nil {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoice) GetCurrencyOk() (*string, bool) {
	if o == nil || o.Currency == nil {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *BillingInvoice) HasCurrency() bool {
	if o != nil && o.Currency != nil {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *BillingInvoice) SetCurrency(v string) {
	o.Currency = &v
}

// GetHostedInvoiceUrl returns the HostedInvoiceUrl field value if set, zero value otherwise.
func (o *BillingInvoice) GetHostedInvoiceUrl() string {
	if o == nil || o.HostedInvoiceUrl == nil {
		var ret string
		return ret
	}
	return *o.HostedInvoiceUrl
}

// GetHostedInvoiceUrlOk returns a tuple with the HostedInvoiceUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoice) GetHostedInvoiceUrlOk() (*string, bool) {
	if o == nil || o.HostedInvoiceUrl == nil {
		return nil, false
	}
	return o.HostedInvoiceUrl, true
}

// HasHostedInvoiceUrl returns a boolean if a field has been set.
func (o *BillingInvoice) HasHostedInvoiceUrl() bool {
	if o != nil && o.HostedInvoiceUrl != nil {
		return true
	}

	return false
}

// SetHostedInvoiceUrl gets a reference to the given string and assigns it to the HostedInvoiceUrl field.
func (o *BillingInvoice) SetHostedInvoiceUrl(v string) {
	o.HostedInvoiceUrl = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BillingInvoice) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoice) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BillingInvoice) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BillingInvoice) SetId(v string) {
	o.Id = &v
}

// GetInvoicePdf returns the InvoicePdf field value if set, zero value otherwise.
func (o *BillingInvoice) GetInvoicePdf() string {
	if o == nil || o.InvoicePdf == nil {
		var ret string
		return ret
	}
	return *o.InvoicePdf
}

// GetInvoicePdfOk returns a tuple with the InvoicePdf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoice) GetInvoicePdfOk() (*string, bool) {
	if o == nil || o.InvoicePdf == nil {
		return nil, false
	}
	return o.InvoicePdf, true
}

// HasInvoicePdf returns a boolean if a field has been set.
func (o *BillingInvoice) HasInvoicePdf() bool {
	if o != nil && o.InvoicePdf != nil {
		return true
	}

	return false
}

// SetInvoicePdf gets a reference to the given string and assigns it to the InvoicePdf field.
func (o *BillingInvoice) SetInvoicePdf(v string) {
	o.InvoicePdf = &v
}

// GetNextPaymentAttempt returns the NextPaymentAttempt field value
func (o *BillingInvoice) GetNextPaymentAttempt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NextPaymentAttempt
}

// GetNextPaymentAttemptOk returns a tuple with the NextPaymentAttempt field value
// and a boolean to check if the value has been set.
func (o *BillingInvoice) GetNextPaymentAttemptOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NextPaymentAttempt, true
}

// SetNextPaymentAttempt sets field value
func (o *BillingInvoice) SetNextPaymentAttempt(v string) {
	o.NextPaymentAttempt = v
}

// GetPeriodEnd returns the PeriodEnd field value
func (o *BillingInvoice) GetPeriodEnd() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PeriodEnd
}

// GetPeriodEndOk returns a tuple with the PeriodEnd field value
// and a boolean to check if the value has been set.
func (o *BillingInvoice) GetPeriodEndOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PeriodEnd, true
}

// SetPeriodEnd sets field value
func (o *BillingInvoice) SetPeriodEnd(v string) {
	o.PeriodEnd = v
}

// GetPeriodStart returns the PeriodStart field value
func (o *BillingInvoice) GetPeriodStart() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PeriodStart
}

// GetPeriodStartOk returns a tuple with the PeriodStart field value
// and a boolean to check if the value has been set.
func (o *BillingInvoice) GetPeriodStartOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PeriodStart, true
}

// SetPeriodStart sets field value
func (o *BillingInvoice) SetPeriodStart(v string) {
	o.PeriodStart = v
}

// GetReceiptNumber returns the ReceiptNumber field value if set, zero value otherwise.
func (o *BillingInvoice) GetReceiptNumber() string {
	if o == nil || o.ReceiptNumber == nil {
		var ret string
		return ret
	}
	return *o.ReceiptNumber
}

// GetReceiptNumberOk returns a tuple with the ReceiptNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoice) GetReceiptNumberOk() (*string, bool) {
	if o == nil || o.ReceiptNumber == nil {
		return nil, false
	}
	return o.ReceiptNumber, true
}

// HasReceiptNumber returns a boolean if a field has been set.
func (o *BillingInvoice) HasReceiptNumber() bool {
	if o != nil && o.ReceiptNumber != nil {
		return true
	}

	return false
}

// SetReceiptNumber gets a reference to the given string and assigns it to the ReceiptNumber field.
func (o *BillingInvoice) SetReceiptNumber(v string) {
	o.ReceiptNumber = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *BillingInvoice) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoice) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *BillingInvoice) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *BillingInvoice) SetStatus(v string) {
	o.Status = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *BillingInvoice) GetTotal() int32 {
	if o == nil || o.Total == nil {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoice) GetTotalOk() (*int32, bool) {
	if o == nil || o.Total == nil {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *BillingInvoice) HasTotal() bool {
	if o != nil && o.Total != nil {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *BillingInvoice) SetTotal(v int32) {
	o.Total = &v
}

func (o BillingInvoice) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AttemptCount != nil {
		toSerialize["attempt_count"] = o.AttemptCount
	}
	if o.Attempted != nil {
		toSerialize["attempted"] = o.Attempted
	}
	if o.BillingReason != nil {
		toSerialize["billing_reason"] = o.BillingReason
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.Currency != nil {
		toSerialize["currency"] = o.Currency
	}
	if o.HostedInvoiceUrl != nil {
		toSerialize["hosted_invoice_url"] = o.HostedInvoiceUrl
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.InvoicePdf != nil {
		toSerialize["invoice_pdf"] = o.InvoicePdf
	}
	if true {
		toSerialize["next_payment_attempt"] = o.NextPaymentAttempt
	}
	if true {
		toSerialize["period_end"] = o.PeriodEnd
	}
	if true {
		toSerialize["period_start"] = o.PeriodStart
	}
	if o.ReceiptNumber != nil {
		toSerialize["receipt_number"] = o.ReceiptNumber
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Total != nil {
		toSerialize["total"] = o.Total
	}
	return json.Marshal(toSerialize)
}

type NullableBillingInvoice struct {
	value *BillingInvoice
	isSet bool
}

func (v NullableBillingInvoice) Get() *BillingInvoice {
	return v.value
}

func (v *NullableBillingInvoice) Set(val *BillingInvoice) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingInvoice) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingInvoice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingInvoice(val *BillingInvoice) *NullableBillingInvoice {
	return &NullableBillingInvoice{value: val, isSet: true}
}

func (v NullableBillingInvoice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingInvoice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
