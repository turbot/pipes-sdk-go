/*
Turbot Pipes

Turbot Pipes is an intelligence, automation & security platform built specifically for DevOps.

API version: {{OPEN_API_VERSION}}
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pipes

import (
	"encoding/json"
)

// AttachWorkspaceSchemaRequest struct for AttachWorkspaceSchemaRequest
type AttachWorkspaceSchemaRequest struct {
	AggregatorHandle *string `json:"aggregator_handle,omitempty"`
	ConnectionFolder *string `json:"connection_folder,omitempty"`
	ConnectionHandle *string `json:"connection_handle,omitempty"`
}

// NewAttachWorkspaceSchemaRequest instantiates a new AttachWorkspaceSchemaRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttachWorkspaceSchemaRequest() *AttachWorkspaceSchemaRequest {
	this := AttachWorkspaceSchemaRequest{}
	return &this
}

// NewAttachWorkspaceSchemaRequestWithDefaults instantiates a new AttachWorkspaceSchemaRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttachWorkspaceSchemaRequestWithDefaults() *AttachWorkspaceSchemaRequest {
	this := AttachWorkspaceSchemaRequest{}
	return &this
}

// GetAggregatorHandle returns the AggregatorHandle field value if set, zero value otherwise.
func (o *AttachWorkspaceSchemaRequest) GetAggregatorHandle() string {
	if o == nil || o.AggregatorHandle == nil {
		var ret string
		return ret
	}
	return *o.AggregatorHandle
}

// GetAggregatorHandleOk returns a tuple with the AggregatorHandle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachWorkspaceSchemaRequest) GetAggregatorHandleOk() (*string, bool) {
	if o == nil || o.AggregatorHandle == nil {
		return nil, false
	}
	return o.AggregatorHandle, true
}

// HasAggregatorHandle returns a boolean if a field has been set.
func (o *AttachWorkspaceSchemaRequest) HasAggregatorHandle() bool {
	if o != nil && o.AggregatorHandle != nil {
		return true
	}

	return false
}

// SetAggregatorHandle gets a reference to the given string and assigns it to the AggregatorHandle field.
func (o *AttachWorkspaceSchemaRequest) SetAggregatorHandle(v string) {
	o.AggregatorHandle = &v
}

// GetConnectionFolder returns the ConnectionFolder field value if set, zero value otherwise.
func (o *AttachWorkspaceSchemaRequest) GetConnectionFolder() string {
	if o == nil || o.ConnectionFolder == nil {
		var ret string
		return ret
	}
	return *o.ConnectionFolder
}

// GetConnectionFolderOk returns a tuple with the ConnectionFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachWorkspaceSchemaRequest) GetConnectionFolderOk() (*string, bool) {
	if o == nil || o.ConnectionFolder == nil {
		return nil, false
	}
	return o.ConnectionFolder, true
}

// HasConnectionFolder returns a boolean if a field has been set.
func (o *AttachWorkspaceSchemaRequest) HasConnectionFolder() bool {
	if o != nil && o.ConnectionFolder != nil {
		return true
	}

	return false
}

// SetConnectionFolder gets a reference to the given string and assigns it to the ConnectionFolder field.
func (o *AttachWorkspaceSchemaRequest) SetConnectionFolder(v string) {
	o.ConnectionFolder = &v
}

// GetConnectionHandle returns the ConnectionHandle field value if set, zero value otherwise.
func (o *AttachWorkspaceSchemaRequest) GetConnectionHandle() string {
	if o == nil || o.ConnectionHandle == nil {
		var ret string
		return ret
	}
	return *o.ConnectionHandle
}

// GetConnectionHandleOk returns a tuple with the ConnectionHandle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttachWorkspaceSchemaRequest) GetConnectionHandleOk() (*string, bool) {
	if o == nil || o.ConnectionHandle == nil {
		return nil, false
	}
	return o.ConnectionHandle, true
}

// HasConnectionHandle returns a boolean if a field has been set.
func (o *AttachWorkspaceSchemaRequest) HasConnectionHandle() bool {
	if o != nil && o.ConnectionHandle != nil {
		return true
	}

	return false
}

// SetConnectionHandle gets a reference to the given string and assigns it to the ConnectionHandle field.
func (o *AttachWorkspaceSchemaRequest) SetConnectionHandle(v string) {
	o.ConnectionHandle = &v
}

func (o AttachWorkspaceSchemaRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AggregatorHandle != nil {
		toSerialize["aggregator_handle"] = o.AggregatorHandle
	}
	if o.ConnectionFolder != nil {
		toSerialize["connection_folder"] = o.ConnectionFolder
	}
	if o.ConnectionHandle != nil {
		toSerialize["connection_handle"] = o.ConnectionHandle
	}
	return json.Marshal(toSerialize)
}

type NullableAttachWorkspaceSchemaRequest struct {
	value *AttachWorkspaceSchemaRequest
	isSet bool
}

func (v NullableAttachWorkspaceSchemaRequest) Get() *AttachWorkspaceSchemaRequest {
	return v.value
}

func (v *NullableAttachWorkspaceSchemaRequest) Set(val *AttachWorkspaceSchemaRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAttachWorkspaceSchemaRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAttachWorkspaceSchemaRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttachWorkspaceSchemaRequest(val *AttachWorkspaceSchemaRequest) *NullableAttachWorkspaceSchemaRequest {
	return &NullableAttachWorkspaceSchemaRequest{value: val, isSet: true}
}

func (v NullableAttachWorkspaceSchemaRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttachWorkspaceSchemaRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
