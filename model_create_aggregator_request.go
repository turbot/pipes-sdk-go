/*
Turbot Pipes

Turbot Pipes is an intelligence, automation & security platform built specifically for DevOps.

API version: {{OPEN_API_VERSION}}
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pipes

import (
	"encoding/json"
)

// CreateAggregatorRequest struct for CreateAggregatorRequest
type CreateAggregatorRequest struct {
	Config *map[string]interface{} `json:"config,omitempty"`
	// The connections that are a part of the aggregator.
	Connections *[]string `json:"connections,omitempty"`
	// The handle of the aggregator.
	Handle string `json:"handle"`
	Plugin string `json:"plugin"`
}

// NewCreateAggregatorRequest instantiates a new CreateAggregatorRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAggregatorRequest(handle string, plugin string) *CreateAggregatorRequest {
	this := CreateAggregatorRequest{}
	this.Handle = handle
	this.Plugin = plugin
	return &this
}

// NewCreateAggregatorRequestWithDefaults instantiates a new CreateAggregatorRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAggregatorRequestWithDefaults() *CreateAggregatorRequest {
	this := CreateAggregatorRequest{}
	return &this
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *CreateAggregatorRequest) GetConfig() map[string]interface{} {
	if o == nil || o.Config == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAggregatorRequest) GetConfigOk() (*map[string]interface{}, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *CreateAggregatorRequest) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]interface{} and assigns it to the Config field.
func (o *CreateAggregatorRequest) SetConfig(v map[string]interface{}) {
	o.Config = &v
}

// GetConnections returns the Connections field value if set, zero value otherwise.
func (o *CreateAggregatorRequest) GetConnections() []string {
	if o == nil || o.Connections == nil {
		var ret []string
		return ret
	}
	return *o.Connections
}

// GetConnectionsOk returns a tuple with the Connections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAggregatorRequest) GetConnectionsOk() (*[]string, bool) {
	if o == nil || o.Connections == nil {
		return nil, false
	}
	return o.Connections, true
}

// HasConnections returns a boolean if a field has been set.
func (o *CreateAggregatorRequest) HasConnections() bool {
	if o != nil && o.Connections != nil {
		return true
	}

	return false
}

// SetConnections gets a reference to the given []string and assigns it to the Connections field.
func (o *CreateAggregatorRequest) SetConnections(v []string) {
	o.Connections = &v
}

// GetHandle returns the Handle field value
func (o *CreateAggregatorRequest) GetHandle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Handle
}

// GetHandleOk returns a tuple with the Handle field value
// and a boolean to check if the value has been set.
func (o *CreateAggregatorRequest) GetHandleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Handle, true
}

// SetHandle sets field value
func (o *CreateAggregatorRequest) SetHandle(v string) {
	o.Handle = v
}

// GetPlugin returns the Plugin field value
func (o *CreateAggregatorRequest) GetPlugin() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Plugin
}

// GetPluginOk returns a tuple with the Plugin field value
// and a boolean to check if the value has been set.
func (o *CreateAggregatorRequest) GetPluginOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Plugin, true
}

// SetPlugin sets field value
func (o *CreateAggregatorRequest) SetPlugin(v string) {
	o.Plugin = v
}

func (o CreateAggregatorRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	if o.Connections != nil {
		toSerialize["connections"] = o.Connections
	}
	if true {
		toSerialize["handle"] = o.Handle
	}
	if true {
		toSerialize["plugin"] = o.Plugin
	}
	return json.Marshal(toSerialize)
}

type NullableCreateAggregatorRequest struct {
	value *CreateAggregatorRequest
	isSet bool
}

func (v NullableCreateAggregatorRequest) Get() *CreateAggregatorRequest {
	return v.value
}

func (v *NullableCreateAggregatorRequest) Set(val *CreateAggregatorRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAggregatorRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAggregatorRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAggregatorRequest(val *CreateAggregatorRequest) *NullableCreateAggregatorRequest {
	return &NullableCreateAggregatorRequest{value: val, isSet: true}
}

func (v NullableCreateAggregatorRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAggregatorRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
