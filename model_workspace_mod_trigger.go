/*
Turbot Pipes

Turbot Pipes is an intelligence, automation & security platform built specifically for DevOps.

API version: {{OPEN_API_VERSION}}
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pipes

import (
	"encoding/json"
)

// WorkspaceModTrigger struct for WorkspaceModTrigger
type WorkspaceModTrigger struct {
	Args *map[string]interface{} `json:"args,omitempty"`
	// The time of creation in ISO 8601 UTC.
	CreatedAt string `json:"created_at"`
	// User information for the user who created this.
	CreatedBy *User `json:"created_by,omitempty"`
	// The ID of the user that created this.
	CreatedById     string        `json:"created_by_id"`
	DefaultSchedule *string       `json:"default_schedule,omitempty"`
	DefaultState    *TriggerState `json:"default_state,omitempty"`
	// The time the item was deleted in ISO 8601 UTC.
	DeletedAt *string `json:"deleted_at,omitempty"`
	// User information for the user that performed the deletion.
	DeletedBy *User `json:"deleted_by,omitempty"`
	// The ID of the user that performed the deletion.
	DeletedById string    `json:"deleted_by_id"`
	Description *string   `json:"description,omitempty"`
	Id          *string   `json:"id,omitempty"`
	Identity    *Identity `json:"identity,omitempty"`
	IdentityId  *string   `json:"identity_id,omitempty"`
	// Information for the last process of the pipeline.
	LastProcess *SpProcess `json:"last_process,omitempty"`
	// The id of the last process that was run for the pipeline.
	LastProcessId *string `json:"last_process_id,omitempty"`
	Name          *string `json:"name,omitempty"`
	// The time when the trigger is next scheduled to run in ISO 8601 UTC.
	NextRunAt   *string                 `json:"next_run_at,omitempty"`
	Params      *map[string]interface{} `json:"params,omitempty"`
	Pipelines   *map[string]interface{} `json:"pipelines,omitempty"`
	Query       *string                 `json:"query,omitempty"`
	Schedule    *PipelineFrequency      `json:"schedule,omitempty"`
	State       *TriggerState           `json:"state,omitempty"`
	StateReason *string                 `json:"state_reason,omitempty"`
	Tags        *map[string]interface{} `json:"tags,omitempty"`
	Title       *string                 `json:"title,omitempty"`
	Type        *string                 `json:"type,omitempty"`
	// The time of the last update in ISO 8601 UTC.
	UpdatedAt *string `json:"updated_at,omitempty"`
	// User information for the last user to update this.
	UpdatedBy *User `json:"updated_by,omitempty"`
	// The ID of the user that performed the last update.
	UpdatedById string `json:"updated_by_id"`
	// The version ID of this item. Pass this version ID via an If-Match header when performing mutation operations on the item.
	VersionId      int32         `json:"version_id"`
	Workspace      *Workspace    `json:"workspace,omitempty"`
	WorkspaceId    *string       `json:"workspace_id,omitempty"`
	WorkspaceMod   *WorkspaceMod `json:"workspace_mod,omitempty"`
	WorkspaceModId *string       `json:"workspace_mod_id,omitempty"`
}

// NewWorkspaceModTrigger instantiates a new WorkspaceModTrigger object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkspaceModTrigger(createdAt string, createdById string, deletedById string, updatedById string, versionId int32) *WorkspaceModTrigger {
	this := WorkspaceModTrigger{}
	this.CreatedAt = createdAt
	this.CreatedById = createdById
	this.DeletedById = deletedById
	this.UpdatedById = updatedById
	this.VersionId = versionId
	return &this
}

// NewWorkspaceModTriggerWithDefaults instantiates a new WorkspaceModTrigger object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkspaceModTriggerWithDefaults() *WorkspaceModTrigger {
	this := WorkspaceModTrigger{}
	return &this
}

// GetArgs returns the Args field value if set, zero value otherwise.
func (o *WorkspaceModTrigger) GetArgs() map[string]interface{} {
	if o == nil || o.Args == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Args
}

// GetArgsOk returns a tuple with the Args field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetArgsOk() (*map[string]interface{}, bool) {
	if o == nil || o.Args == nil {
		return nil, false
	}
	return o.Args, true
}

// HasArgs returns a boolean if a field has been set.
func (o *WorkspaceModTrigger) HasArgs() bool {
	if o != nil && o.Args != nil {
		return true
	}

	return false
}

// SetArgs gets a reference to the given map[string]interface{} and assigns it to the Args field.
func (o *WorkspaceModTrigger) SetArgs(v map[string]interface{}) {
	o.Args = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *WorkspaceModTrigger) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *WorkspaceModTrigger) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *WorkspaceModTrigger) GetCreatedBy() User {
	if o == nil || o.CreatedBy == nil {
		var ret User
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetCreatedByOk() (*User, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *WorkspaceModTrigger) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given User and assigns it to the CreatedBy field.
func (o *WorkspaceModTrigger) SetCreatedBy(v User) {
	o.CreatedBy = &v
}

// GetCreatedById returns the CreatedById field value
func (o *WorkspaceModTrigger) GetCreatedById() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedById
}

// GetCreatedByIdOk returns a tuple with the CreatedById field value
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetCreatedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedById, true
}

// SetCreatedById sets field value
func (o *WorkspaceModTrigger) SetCreatedById(v string) {
	o.CreatedById = v
}

// GetDefaultSchedule returns the DefaultSchedule field value if set, zero value otherwise.
func (o *WorkspaceModTrigger) GetDefaultSchedule() string {
	if o == nil || o.DefaultSchedule == nil {
		var ret string
		return ret
	}
	return *o.DefaultSchedule
}

// GetDefaultScheduleOk returns a tuple with the DefaultSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetDefaultScheduleOk() (*string, bool) {
	if o == nil || o.DefaultSchedule == nil {
		return nil, false
	}
	return o.DefaultSchedule, true
}

// HasDefaultSchedule returns a boolean if a field has been set.
func (o *WorkspaceModTrigger) HasDefaultSchedule() bool {
	if o != nil && o.DefaultSchedule != nil {
		return true
	}

	return false
}

// SetDefaultSchedule gets a reference to the given string and assigns it to the DefaultSchedule field.
func (o *WorkspaceModTrigger) SetDefaultSchedule(v string) {
	o.DefaultSchedule = &v
}

// GetDefaultState returns the DefaultState field value if set, zero value otherwise.
func (o *WorkspaceModTrigger) GetDefaultState() TriggerState {
	if o == nil || o.DefaultState == nil {
		var ret TriggerState
		return ret
	}
	return *o.DefaultState
}

// GetDefaultStateOk returns a tuple with the DefaultState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetDefaultStateOk() (*TriggerState, bool) {
	if o == nil || o.DefaultState == nil {
		return nil, false
	}
	return o.DefaultState, true
}

// HasDefaultState returns a boolean if a field has been set.
func (o *WorkspaceModTrigger) HasDefaultState() bool {
	if o != nil && o.DefaultState != nil {
		return true
	}

	return false
}

// SetDefaultState gets a reference to the given TriggerState and assigns it to the DefaultState field.
func (o *WorkspaceModTrigger) SetDefaultState(v TriggerState) {
	o.DefaultState = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *WorkspaceModTrigger) GetDeletedAt() string {
	if o == nil || o.DeletedAt == nil {
		var ret string
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetDeletedAtOk() (*string, bool) {
	if o == nil || o.DeletedAt == nil {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *WorkspaceModTrigger) HasDeletedAt() bool {
	if o != nil && o.DeletedAt != nil {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given string and assigns it to the DeletedAt field.
func (o *WorkspaceModTrigger) SetDeletedAt(v string) {
	o.DeletedAt = &v
}

// GetDeletedBy returns the DeletedBy field value if set, zero value otherwise.
func (o *WorkspaceModTrigger) GetDeletedBy() User {
	if o == nil || o.DeletedBy == nil {
		var ret User
		return ret
	}
	return *o.DeletedBy
}

// GetDeletedByOk returns a tuple with the DeletedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetDeletedByOk() (*User, bool) {
	if o == nil || o.DeletedBy == nil {
		return nil, false
	}
	return o.DeletedBy, true
}

// HasDeletedBy returns a boolean if a field has been set.
func (o *WorkspaceModTrigger) HasDeletedBy() bool {
	if o != nil && o.DeletedBy != nil {
		return true
	}

	return false
}

// SetDeletedBy gets a reference to the given User and assigns it to the DeletedBy field.
func (o *WorkspaceModTrigger) SetDeletedBy(v User) {
	o.DeletedBy = &v
}

// GetDeletedById returns the DeletedById field value
func (o *WorkspaceModTrigger) GetDeletedById() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeletedById
}

// GetDeletedByIdOk returns a tuple with the DeletedById field value
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetDeletedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeletedById, true
}

// SetDeletedById sets field value
func (o *WorkspaceModTrigger) SetDeletedById(v string) {
	o.DeletedById = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *WorkspaceModTrigger) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *WorkspaceModTrigger) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *WorkspaceModTrigger) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WorkspaceModTrigger) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WorkspaceModTrigger) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WorkspaceModTrigger) SetId(v string) {
	o.Id = &v
}

// GetIdentity returns the Identity field value if set, zero value otherwise.
func (o *WorkspaceModTrigger) GetIdentity() Identity {
	if o == nil || o.Identity == nil {
		var ret Identity
		return ret
	}
	return *o.Identity
}

// GetIdentityOk returns a tuple with the Identity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetIdentityOk() (*Identity, bool) {
	if o == nil || o.Identity == nil {
		return nil, false
	}
	return o.Identity, true
}

// HasIdentity returns a boolean if a field has been set.
func (o *WorkspaceModTrigger) HasIdentity() bool {
	if o != nil && o.Identity != nil {
		return true
	}

	return false
}

// SetIdentity gets a reference to the given Identity and assigns it to the Identity field.
func (o *WorkspaceModTrigger) SetIdentity(v Identity) {
	o.Identity = &v
}

// GetIdentityId returns the IdentityId field value if set, zero value otherwise.
func (o *WorkspaceModTrigger) GetIdentityId() string {
	if o == nil || o.IdentityId == nil {
		var ret string
		return ret
	}
	return *o.IdentityId
}

// GetIdentityIdOk returns a tuple with the IdentityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetIdentityIdOk() (*string, bool) {
	if o == nil || o.IdentityId == nil {
		return nil, false
	}
	return o.IdentityId, true
}

// HasIdentityId returns a boolean if a field has been set.
func (o *WorkspaceModTrigger) HasIdentityId() bool {
	if o != nil && o.IdentityId != nil {
		return true
	}

	return false
}

// SetIdentityId gets a reference to the given string and assigns it to the IdentityId field.
func (o *WorkspaceModTrigger) SetIdentityId(v string) {
	o.IdentityId = &v
}

// GetLastProcess returns the LastProcess field value if set, zero value otherwise.
func (o *WorkspaceModTrigger) GetLastProcess() SpProcess {
	if o == nil || o.LastProcess == nil {
		var ret SpProcess
		return ret
	}
	return *o.LastProcess
}

// GetLastProcessOk returns a tuple with the LastProcess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetLastProcessOk() (*SpProcess, bool) {
	if o == nil || o.LastProcess == nil {
		return nil, false
	}
	return o.LastProcess, true
}

// HasLastProcess returns a boolean if a field has been set.
func (o *WorkspaceModTrigger) HasLastProcess() bool {
	if o != nil && o.LastProcess != nil {
		return true
	}

	return false
}

// SetLastProcess gets a reference to the given SpProcess and assigns it to the LastProcess field.
func (o *WorkspaceModTrigger) SetLastProcess(v SpProcess) {
	o.LastProcess = &v
}

// GetLastProcessId returns the LastProcessId field value if set, zero value otherwise.
func (o *WorkspaceModTrigger) GetLastProcessId() string {
	if o == nil || o.LastProcessId == nil {
		var ret string
		return ret
	}
	return *o.LastProcessId
}

// GetLastProcessIdOk returns a tuple with the LastProcessId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetLastProcessIdOk() (*string, bool) {
	if o == nil || o.LastProcessId == nil {
		return nil, false
	}
	return o.LastProcessId, true
}

// HasLastProcessId returns a boolean if a field has been set.
func (o *WorkspaceModTrigger) HasLastProcessId() bool {
	if o != nil && o.LastProcessId != nil {
		return true
	}

	return false
}

// SetLastProcessId gets a reference to the given string and assigns it to the LastProcessId field.
func (o *WorkspaceModTrigger) SetLastProcessId(v string) {
	o.LastProcessId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WorkspaceModTrigger) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WorkspaceModTrigger) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WorkspaceModTrigger) SetName(v string) {
	o.Name = &v
}

// GetNextRunAt returns the NextRunAt field value if set, zero value otherwise.
func (o *WorkspaceModTrigger) GetNextRunAt() string {
	if o == nil || o.NextRunAt == nil {
		var ret string
		return ret
	}
	return *o.NextRunAt
}

// GetNextRunAtOk returns a tuple with the NextRunAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetNextRunAtOk() (*string, bool) {
	if o == nil || o.NextRunAt == nil {
		return nil, false
	}
	return o.NextRunAt, true
}

// HasNextRunAt returns a boolean if a field has been set.
func (o *WorkspaceModTrigger) HasNextRunAt() bool {
	if o != nil && o.NextRunAt != nil {
		return true
	}

	return false
}

// SetNextRunAt gets a reference to the given string and assigns it to the NextRunAt field.
func (o *WorkspaceModTrigger) SetNextRunAt(v string) {
	o.NextRunAt = &v
}

// GetParams returns the Params field value if set, zero value otherwise.
func (o *WorkspaceModTrigger) GetParams() map[string]interface{} {
	if o == nil || o.Params == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Params
}

// GetParamsOk returns a tuple with the Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetParamsOk() (*map[string]interface{}, bool) {
	if o == nil || o.Params == nil {
		return nil, false
	}
	return o.Params, true
}

// HasParams returns a boolean if a field has been set.
func (o *WorkspaceModTrigger) HasParams() bool {
	if o != nil && o.Params != nil {
		return true
	}

	return false
}

// SetParams gets a reference to the given map[string]interface{} and assigns it to the Params field.
func (o *WorkspaceModTrigger) SetParams(v map[string]interface{}) {
	o.Params = &v
}

// GetPipelines returns the Pipelines field value if set, zero value otherwise.
func (o *WorkspaceModTrigger) GetPipelines() map[string]interface{} {
	if o == nil || o.Pipelines == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Pipelines
}

// GetPipelinesOk returns a tuple with the Pipelines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetPipelinesOk() (*map[string]interface{}, bool) {
	if o == nil || o.Pipelines == nil {
		return nil, false
	}
	return o.Pipelines, true
}

// HasPipelines returns a boolean if a field has been set.
func (o *WorkspaceModTrigger) HasPipelines() bool {
	if o != nil && o.Pipelines != nil {
		return true
	}

	return false
}

// SetPipelines gets a reference to the given map[string]interface{} and assigns it to the Pipelines field.
func (o *WorkspaceModTrigger) SetPipelines(v map[string]interface{}) {
	o.Pipelines = &v
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *WorkspaceModTrigger) GetQuery() string {
	if o == nil || o.Query == nil {
		var ret string
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetQueryOk() (*string, bool) {
	if o == nil || o.Query == nil {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *WorkspaceModTrigger) HasQuery() bool {
	if o != nil && o.Query != nil {
		return true
	}

	return false
}

// SetQuery gets a reference to the given string and assigns it to the Query field.
func (o *WorkspaceModTrigger) SetQuery(v string) {
	o.Query = &v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *WorkspaceModTrigger) GetSchedule() PipelineFrequency {
	if o == nil || o.Schedule == nil {
		var ret PipelineFrequency
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetScheduleOk() (*PipelineFrequency, bool) {
	if o == nil || o.Schedule == nil {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *WorkspaceModTrigger) HasSchedule() bool {
	if o != nil && o.Schedule != nil {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given PipelineFrequency and assigns it to the Schedule field.
func (o *WorkspaceModTrigger) SetSchedule(v PipelineFrequency) {
	o.Schedule = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *WorkspaceModTrigger) GetState() TriggerState {
	if o == nil || o.State == nil {
		var ret TriggerState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetStateOk() (*TriggerState, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *WorkspaceModTrigger) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given TriggerState and assigns it to the State field.
func (o *WorkspaceModTrigger) SetState(v TriggerState) {
	o.State = &v
}

// GetStateReason returns the StateReason field value if set, zero value otherwise.
func (o *WorkspaceModTrigger) GetStateReason() string {
	if o == nil || o.StateReason == nil {
		var ret string
		return ret
	}
	return *o.StateReason
}

// GetStateReasonOk returns a tuple with the StateReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetStateReasonOk() (*string, bool) {
	if o == nil || o.StateReason == nil {
		return nil, false
	}
	return o.StateReason, true
}

// HasStateReason returns a boolean if a field has been set.
func (o *WorkspaceModTrigger) HasStateReason() bool {
	if o != nil && o.StateReason != nil {
		return true
	}

	return false
}

// SetStateReason gets a reference to the given string and assigns it to the StateReason field.
func (o *WorkspaceModTrigger) SetStateReason(v string) {
	o.StateReason = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *WorkspaceModTrigger) GetTags() map[string]interface{} {
	if o == nil || o.Tags == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetTagsOk() (*map[string]interface{}, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *WorkspaceModTrigger) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given map[string]interface{} and assigns it to the Tags field.
func (o *WorkspaceModTrigger) SetTags(v map[string]interface{}) {
	o.Tags = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *WorkspaceModTrigger) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *WorkspaceModTrigger) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *WorkspaceModTrigger) SetTitle(v string) {
	o.Title = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *WorkspaceModTrigger) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *WorkspaceModTrigger) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *WorkspaceModTrigger) SetType(v string) {
	o.Type = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *WorkspaceModTrigger) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *WorkspaceModTrigger) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *WorkspaceModTrigger) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *WorkspaceModTrigger) GetUpdatedBy() User {
	if o == nil || o.UpdatedBy == nil {
		var ret User
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetUpdatedByOk() (*User, bool) {
	if o == nil || o.UpdatedBy == nil {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *WorkspaceModTrigger) HasUpdatedBy() bool {
	if o != nil && o.UpdatedBy != nil {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given User and assigns it to the UpdatedBy field.
func (o *WorkspaceModTrigger) SetUpdatedBy(v User) {
	o.UpdatedBy = &v
}

// GetUpdatedById returns the UpdatedById field value
func (o *WorkspaceModTrigger) GetUpdatedById() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedById
}

// GetUpdatedByIdOk returns a tuple with the UpdatedById field value
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetUpdatedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedById, true
}

// SetUpdatedById sets field value
func (o *WorkspaceModTrigger) SetUpdatedById(v string) {
	o.UpdatedById = v
}

// GetVersionId returns the VersionId field value
func (o *WorkspaceModTrigger) GetVersionId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.VersionId
}

// GetVersionIdOk returns a tuple with the VersionId field value
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetVersionIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VersionId, true
}

// SetVersionId sets field value
func (o *WorkspaceModTrigger) SetVersionId(v int32) {
	o.VersionId = v
}

// GetWorkspace returns the Workspace field value if set, zero value otherwise.
func (o *WorkspaceModTrigger) GetWorkspace() Workspace {
	if o == nil || o.Workspace == nil {
		var ret Workspace
		return ret
	}
	return *o.Workspace
}

// GetWorkspaceOk returns a tuple with the Workspace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetWorkspaceOk() (*Workspace, bool) {
	if o == nil || o.Workspace == nil {
		return nil, false
	}
	return o.Workspace, true
}

// HasWorkspace returns a boolean if a field has been set.
func (o *WorkspaceModTrigger) HasWorkspace() bool {
	if o != nil && o.Workspace != nil {
		return true
	}

	return false
}

// SetWorkspace gets a reference to the given Workspace and assigns it to the Workspace field.
func (o *WorkspaceModTrigger) SetWorkspace(v Workspace) {
	o.Workspace = &v
}

// GetWorkspaceId returns the WorkspaceId field value if set, zero value otherwise.
func (o *WorkspaceModTrigger) GetWorkspaceId() string {
	if o == nil || o.WorkspaceId == nil {
		var ret string
		return ret
	}
	return *o.WorkspaceId
}

// GetWorkspaceIdOk returns a tuple with the WorkspaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetWorkspaceIdOk() (*string, bool) {
	if o == nil || o.WorkspaceId == nil {
		return nil, false
	}
	return o.WorkspaceId, true
}

// HasWorkspaceId returns a boolean if a field has been set.
func (o *WorkspaceModTrigger) HasWorkspaceId() bool {
	if o != nil && o.WorkspaceId != nil {
		return true
	}

	return false
}

// SetWorkspaceId gets a reference to the given string and assigns it to the WorkspaceId field.
func (o *WorkspaceModTrigger) SetWorkspaceId(v string) {
	o.WorkspaceId = &v
}

// GetWorkspaceMod returns the WorkspaceMod field value if set, zero value otherwise.
func (o *WorkspaceModTrigger) GetWorkspaceMod() WorkspaceMod {
	if o == nil || o.WorkspaceMod == nil {
		var ret WorkspaceMod
		return ret
	}
	return *o.WorkspaceMod
}

// GetWorkspaceModOk returns a tuple with the WorkspaceMod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetWorkspaceModOk() (*WorkspaceMod, bool) {
	if o == nil || o.WorkspaceMod == nil {
		return nil, false
	}
	return o.WorkspaceMod, true
}

// HasWorkspaceMod returns a boolean if a field has been set.
func (o *WorkspaceModTrigger) HasWorkspaceMod() bool {
	if o != nil && o.WorkspaceMod != nil {
		return true
	}

	return false
}

// SetWorkspaceMod gets a reference to the given WorkspaceMod and assigns it to the WorkspaceMod field.
func (o *WorkspaceModTrigger) SetWorkspaceMod(v WorkspaceMod) {
	o.WorkspaceMod = &v
}

// GetWorkspaceModId returns the WorkspaceModId field value if set, zero value otherwise.
func (o *WorkspaceModTrigger) GetWorkspaceModId() string {
	if o == nil || o.WorkspaceModId == nil {
		var ret string
		return ret
	}
	return *o.WorkspaceModId
}

// GetWorkspaceModIdOk returns a tuple with the WorkspaceModId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceModTrigger) GetWorkspaceModIdOk() (*string, bool) {
	if o == nil || o.WorkspaceModId == nil {
		return nil, false
	}
	return o.WorkspaceModId, true
}

// HasWorkspaceModId returns a boolean if a field has been set.
func (o *WorkspaceModTrigger) HasWorkspaceModId() bool {
	if o != nil && o.WorkspaceModId != nil {
		return true
	}

	return false
}

// SetWorkspaceModId gets a reference to the given string and assigns it to the WorkspaceModId field.
func (o *WorkspaceModTrigger) SetWorkspaceModId(v string) {
	o.WorkspaceModId = &v
}

func (o WorkspaceModTrigger) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Args != nil {
		toSerialize["args"] = o.Args
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.CreatedBy != nil {
		toSerialize["created_by"] = o.CreatedBy
	}
	if true {
		toSerialize["created_by_id"] = o.CreatedById
	}
	if o.DefaultSchedule != nil {
		toSerialize["default_schedule"] = o.DefaultSchedule
	}
	if o.DefaultState != nil {
		toSerialize["default_state"] = o.DefaultState
	}
	if o.DeletedAt != nil {
		toSerialize["deleted_at"] = o.DeletedAt
	}
	if o.DeletedBy != nil {
		toSerialize["deleted_by"] = o.DeletedBy
	}
	if true {
		toSerialize["deleted_by_id"] = o.DeletedById
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Identity != nil {
		toSerialize["identity"] = o.Identity
	}
	if o.IdentityId != nil {
		toSerialize["identity_id"] = o.IdentityId
	}
	if o.LastProcess != nil {
		toSerialize["last_process"] = o.LastProcess
	}
	if o.LastProcessId != nil {
		toSerialize["last_process_id"] = o.LastProcessId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.NextRunAt != nil {
		toSerialize["next_run_at"] = o.NextRunAt
	}
	if o.Params != nil {
		toSerialize["params"] = o.Params
	}
	if o.Pipelines != nil {
		toSerialize["pipelines"] = o.Pipelines
	}
	if o.Query != nil {
		toSerialize["query"] = o.Query
	}
	if o.Schedule != nil {
		toSerialize["schedule"] = o.Schedule
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.StateReason != nil {
		toSerialize["state_reason"] = o.StateReason
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.UpdatedBy != nil {
		toSerialize["updated_by"] = o.UpdatedBy
	}
	if true {
		toSerialize["updated_by_id"] = o.UpdatedById
	}
	if true {
		toSerialize["version_id"] = o.VersionId
	}
	if o.Workspace != nil {
		toSerialize["workspace"] = o.Workspace
	}
	if o.WorkspaceId != nil {
		toSerialize["workspace_id"] = o.WorkspaceId
	}
	if o.WorkspaceMod != nil {
		toSerialize["workspace_mod"] = o.WorkspaceMod
	}
	if o.WorkspaceModId != nil {
		toSerialize["workspace_mod_id"] = o.WorkspaceModId
	}
	return json.Marshal(toSerialize)
}

type NullableWorkspaceModTrigger struct {
	value *WorkspaceModTrigger
	isSet bool
}

func (v NullableWorkspaceModTrigger) Get() *WorkspaceModTrigger {
	return v.value
}

func (v *NullableWorkspaceModTrigger) Set(val *WorkspaceModTrigger) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkspaceModTrigger) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkspaceModTrigger) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkspaceModTrigger(val *WorkspaceModTrigger) *NullableWorkspaceModTrigger {
	return &NullableWorkspaceModTrigger{value: val, isSet: true}
}

func (v NullableWorkspaceModTrigger) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkspaceModTrigger) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
