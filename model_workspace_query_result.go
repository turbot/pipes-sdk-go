/*
Turbot Pipes

Turbot Pipes is an intelligence, automation & security platform built specifically for DevOps.

API version: {{OPEN_API_VERSION}}
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pipes

import (
	"encoding/json"
)

// WorkspaceQueryResult struct for WorkspaceQueryResult
type WorkspaceQueryResult struct {
	Columns  []WorkspaceQueryResultColumn `json:"columns"`
	Detail   *string                      `json:"detail,omitempty"`
	Instance *string                      `json:"instance,omitempty"`
	Rows     map[string]interface{}       `json:"rows"`
	Status   *int32                       `json:"status,omitempty"`
	Title    *string                      `json:"title,omitempty"`
	Type     *string                      `json:"type,omitempty"`
}

// NewWorkspaceQueryResult instantiates a new WorkspaceQueryResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkspaceQueryResult(columns []WorkspaceQueryResultColumn, rows map[string]interface{}) *WorkspaceQueryResult {
	this := WorkspaceQueryResult{}
	this.Columns = columns
	this.Rows = rows
	return &this
}

// NewWorkspaceQueryResultWithDefaults instantiates a new WorkspaceQueryResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkspaceQueryResultWithDefaults() *WorkspaceQueryResult {
	this := WorkspaceQueryResult{}
	return &this
}

// GetColumns returns the Columns field value
func (o *WorkspaceQueryResult) GetColumns() []WorkspaceQueryResultColumn {
	if o == nil {
		var ret []WorkspaceQueryResultColumn
		return ret
	}

	return o.Columns
}

// GetColumnsOk returns a tuple with the Columns field value
// and a boolean to check if the value has been set.
func (o *WorkspaceQueryResult) GetColumnsOk() (*[]WorkspaceQueryResultColumn, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Columns, true
}

// SetColumns sets field value
func (o *WorkspaceQueryResult) SetColumns(v []WorkspaceQueryResultColumn) {
	o.Columns = v
}

// GetDetail returns the Detail field value if set, zero value otherwise.
func (o *WorkspaceQueryResult) GetDetail() string {
	if o == nil || o.Detail == nil {
		var ret string
		return ret
	}
	return *o.Detail
}

// GetDetailOk returns a tuple with the Detail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceQueryResult) GetDetailOk() (*string, bool) {
	if o == nil || o.Detail == nil {
		return nil, false
	}
	return o.Detail, true
}

// HasDetail returns a boolean if a field has been set.
func (o *WorkspaceQueryResult) HasDetail() bool {
	if o != nil && o.Detail != nil {
		return true
	}

	return false
}

// SetDetail gets a reference to the given string and assigns it to the Detail field.
func (o *WorkspaceQueryResult) SetDetail(v string) {
	o.Detail = &v
}

// GetInstance returns the Instance field value if set, zero value otherwise.
func (o *WorkspaceQueryResult) GetInstance() string {
	if o == nil || o.Instance == nil {
		var ret string
		return ret
	}
	return *o.Instance
}

// GetInstanceOk returns a tuple with the Instance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceQueryResult) GetInstanceOk() (*string, bool) {
	if o == nil || o.Instance == nil {
		return nil, false
	}
	return o.Instance, true
}

// HasInstance returns a boolean if a field has been set.
func (o *WorkspaceQueryResult) HasInstance() bool {
	if o != nil && o.Instance != nil {
		return true
	}

	return false
}

// SetInstance gets a reference to the given string and assigns it to the Instance field.
func (o *WorkspaceQueryResult) SetInstance(v string) {
	o.Instance = &v
}

// GetRows returns the Rows field value
func (o *WorkspaceQueryResult) GetRows() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Rows
}

// GetRowsOk returns a tuple with the Rows field value
// and a boolean to check if the value has been set.
func (o *WorkspaceQueryResult) GetRowsOk() (*map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rows, true
}

// SetRows sets field value
func (o *WorkspaceQueryResult) SetRows(v map[string]interface{}) {
	o.Rows = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *WorkspaceQueryResult) GetStatus() int32 {
	if o == nil || o.Status == nil {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceQueryResult) GetStatusOk() (*int32, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *WorkspaceQueryResult) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *WorkspaceQueryResult) SetStatus(v int32) {
	o.Status = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *WorkspaceQueryResult) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceQueryResult) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *WorkspaceQueryResult) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *WorkspaceQueryResult) SetTitle(v string) {
	o.Title = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *WorkspaceQueryResult) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkspaceQueryResult) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *WorkspaceQueryResult) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *WorkspaceQueryResult) SetType(v string) {
	o.Type = &v
}

func (o WorkspaceQueryResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["columns"] = o.Columns
	}
	if o.Detail != nil {
		toSerialize["detail"] = o.Detail
	}
	if o.Instance != nil {
		toSerialize["instance"] = o.Instance
	}
	if true {
		toSerialize["rows"] = o.Rows
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableWorkspaceQueryResult struct {
	value *WorkspaceQueryResult
	isSet bool
}

func (v NullableWorkspaceQueryResult) Get() *WorkspaceQueryResult {
	return v.value
}

func (v *NullableWorkspaceQueryResult) Set(val *WorkspaceQueryResult) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkspaceQueryResult) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkspaceQueryResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkspaceQueryResult(val *WorkspaceQueryResult) *NullableWorkspaceQueryResult {
	return &NullableWorkspaceQueryResult{value: val, isSet: true}
}

func (v NullableWorkspaceQueryResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkspaceQueryResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
