/*
Turbot Pipes

Turbot Pipes is an intelligence, automation & security platform built specifically for DevOps.

API version: {{OPEN_API_VERSION}}
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pipes

import (
	"encoding/json"
)

// UpdateTriggerRequest struct for UpdateTriggerRequest
type UpdateTriggerRequest struct {
	// A map of arguments to be passed to be trigger.
	Args *map[string]interface{} `json:"args,omitempty"`
	// Optional description for the trigger.
	Description *string `json:"description,omitempty"`
	// The name of the trigger.
	Name *string `json:"name,omitempty"`
	// The schedule at which the trigger will run.
	Schedule *PipelineFrequency `json:"schedule,omitempty"`
	// The desired state of the trigger.
	State *TriggerState `json:"state,omitempty"`
	// Optional title for the trigger.
	Title *string `json:"title,omitempty"`
}

// NewUpdateTriggerRequest instantiates a new UpdateTriggerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTriggerRequest() *UpdateTriggerRequest {
	this := UpdateTriggerRequest{}
	return &this
}

// NewUpdateTriggerRequestWithDefaults instantiates a new UpdateTriggerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTriggerRequestWithDefaults() *UpdateTriggerRequest {
	this := UpdateTriggerRequest{}
	return &this
}

// GetArgs returns the Args field value if set, zero value otherwise.
func (o *UpdateTriggerRequest) GetArgs() map[string]interface{} {
	if o == nil || o.Args == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Args
}

// GetArgsOk returns a tuple with the Args field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTriggerRequest) GetArgsOk() (*map[string]interface{}, bool) {
	if o == nil || o.Args == nil {
		return nil, false
	}
	return o.Args, true
}

// HasArgs returns a boolean if a field has been set.
func (o *UpdateTriggerRequest) HasArgs() bool {
	if o != nil && o.Args != nil {
		return true
	}

	return false
}

// SetArgs gets a reference to the given map[string]interface{} and assigns it to the Args field.
func (o *UpdateTriggerRequest) SetArgs(v map[string]interface{}) {
	o.Args = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateTriggerRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTriggerRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateTriggerRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateTriggerRequest) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateTriggerRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTriggerRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateTriggerRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateTriggerRequest) SetName(v string) {
	o.Name = &v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *UpdateTriggerRequest) GetSchedule() PipelineFrequency {
	if o == nil || o.Schedule == nil {
		var ret PipelineFrequency
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTriggerRequest) GetScheduleOk() (*PipelineFrequency, bool) {
	if o == nil || o.Schedule == nil {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *UpdateTriggerRequest) HasSchedule() bool {
	if o != nil && o.Schedule != nil {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given PipelineFrequency and assigns it to the Schedule field.
func (o *UpdateTriggerRequest) SetSchedule(v PipelineFrequency) {
	o.Schedule = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *UpdateTriggerRequest) GetState() TriggerState {
	if o == nil || o.State == nil {
		var ret TriggerState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTriggerRequest) GetStateOk() (*TriggerState, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *UpdateTriggerRequest) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given TriggerState and assigns it to the State field.
func (o *UpdateTriggerRequest) SetState(v TriggerState) {
	o.State = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *UpdateTriggerRequest) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTriggerRequest) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *UpdateTriggerRequest) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *UpdateTriggerRequest) SetTitle(v string) {
	o.Title = &v
}

func (o UpdateTriggerRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Args != nil {
		toSerialize["args"] = o.Args
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Schedule != nil {
		toSerialize["schedule"] = o.Schedule
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateTriggerRequest struct {
	value *UpdateTriggerRequest
	isSet bool
}

func (v NullableUpdateTriggerRequest) Get() *UpdateTriggerRequest {
	return v.value
}

func (v *NullableUpdateTriggerRequest) Set(val *UpdateTriggerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTriggerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTriggerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTriggerRequest(val *UpdateTriggerRequest) *NullableUpdateTriggerRequest {
	return &NullableUpdateTriggerRequest{value: val, isSet: true}
}

func (v NullableUpdateTriggerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTriggerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
