/*
Turbot Pipes

Turbot Pipes is an intelligence, automation & security platform built specifically for DevOps.

API version: {{OPEN_API_VERSION}}
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pipes

import (
	"encoding/json"
)

// CreateTenantRequest struct for CreateTenantRequest
type CreateTenantRequest struct {
	DisplayName *string `json:"display_name,omitempty"`
	Handle      string  `json:"handle"`
	PlanId      *string `json:"plan_id,omitempty"`
}

// NewCreateTenantRequest instantiates a new CreateTenantRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTenantRequest(handle string) *CreateTenantRequest {
	this := CreateTenantRequest{}
	this.Handle = handle
	return &this
}

// NewCreateTenantRequestWithDefaults instantiates a new CreateTenantRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTenantRequestWithDefaults() *CreateTenantRequest {
	this := CreateTenantRequest{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *CreateTenantRequest) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTenantRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *CreateTenantRequest) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *CreateTenantRequest) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetHandle returns the Handle field value
func (o *CreateTenantRequest) GetHandle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Handle
}

// GetHandleOk returns a tuple with the Handle field value
// and a boolean to check if the value has been set.
func (o *CreateTenantRequest) GetHandleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Handle, true
}

// SetHandle sets field value
func (o *CreateTenantRequest) SetHandle(v string) {
	o.Handle = v
}

// GetPlanId returns the PlanId field value if set, zero value otherwise.
func (o *CreateTenantRequest) GetPlanId() string {
	if o == nil || o.PlanId == nil {
		var ret string
		return ret
	}
	return *o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTenantRequest) GetPlanIdOk() (*string, bool) {
	if o == nil || o.PlanId == nil {
		return nil, false
	}
	return o.PlanId, true
}

// HasPlanId returns a boolean if a field has been set.
func (o *CreateTenantRequest) HasPlanId() bool {
	if o != nil && o.PlanId != nil {
		return true
	}

	return false
}

// SetPlanId gets a reference to the given string and assigns it to the PlanId field.
func (o *CreateTenantRequest) SetPlanId(v string) {
	o.PlanId = &v
}

func (o CreateTenantRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	if true {
		toSerialize["handle"] = o.Handle
	}
	if o.PlanId != nil {
		toSerialize["plan_id"] = o.PlanId
	}
	return json.Marshal(toSerialize)
}

type NullableCreateTenantRequest struct {
	value *CreateTenantRequest
	isSet bool
}

func (v NullableCreateTenantRequest) Get() *CreateTenantRequest {
	return v.value
}

func (v *NullableCreateTenantRequest) Set(val *CreateTenantRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTenantRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTenantRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTenantRequest(val *CreateTenantRequest) *NullableCreateTenantRequest {
	return &NullableCreateTenantRequest{value: val, isSet: true}
}

func (v NullableCreateTenantRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTenantRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
