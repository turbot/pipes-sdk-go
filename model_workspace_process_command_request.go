/*
Turbot Pipes

Turbot Pipes is an intelligence, automation & security platform built specifically for DevOps.

API version: {{OPEN_API_VERSION}}
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pipes

import (
	"encoding/json"
)

// WorkspaceProcessCommandRequest struct for WorkspaceProcessCommandRequest
type WorkspaceProcessCommandRequest struct {
	Command WorkspaceProcessCommandAction `json:"command"`
}

// NewWorkspaceProcessCommandRequest instantiates a new WorkspaceProcessCommandRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkspaceProcessCommandRequest(command WorkspaceProcessCommandAction) *WorkspaceProcessCommandRequest {
	this := WorkspaceProcessCommandRequest{}
	this.Command = command
	return &this
}

// NewWorkspaceProcessCommandRequestWithDefaults instantiates a new WorkspaceProcessCommandRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkspaceProcessCommandRequestWithDefaults() *WorkspaceProcessCommandRequest {
	this := WorkspaceProcessCommandRequest{}
	return &this
}

// GetCommand returns the Command field value
func (o *WorkspaceProcessCommandRequest) GetCommand() WorkspaceProcessCommandAction {
	if o == nil {
		var ret WorkspaceProcessCommandAction
		return ret
	}

	return o.Command
}

// GetCommandOk returns a tuple with the Command field value
// and a boolean to check if the value has been set.
func (o *WorkspaceProcessCommandRequest) GetCommandOk() (*WorkspaceProcessCommandAction, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Command, true
}

// SetCommand sets field value
func (o *WorkspaceProcessCommandRequest) SetCommand(v WorkspaceProcessCommandAction) {
	o.Command = v
}

func (o WorkspaceProcessCommandRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["command"] = o.Command
	}
	return json.Marshal(toSerialize)
}

type NullableWorkspaceProcessCommandRequest struct {
	value *WorkspaceProcessCommandRequest
	isSet bool
}

func (v NullableWorkspaceProcessCommandRequest) Get() *WorkspaceProcessCommandRequest {
	return v.value
}

func (v *NullableWorkspaceProcessCommandRequest) Set(val *WorkspaceProcessCommandRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkspaceProcessCommandRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkspaceProcessCommandRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkspaceProcessCommandRequest(val *WorkspaceProcessCommandRequest) *NullableWorkspaceProcessCommandRequest {
	return &NullableWorkspaceProcessCommandRequest{value: val, isSet: true}
}

func (v NullableWorkspaceProcessCommandRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkspaceProcessCommandRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
