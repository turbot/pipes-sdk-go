/*
Turbot Pipes

Turbot Pipes is an intelligence, automation & security platform built specifically for DevOps.

API version: {{OPEN_API_VERSION}}
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pipes

import (
	"encoding/json"
)

// GithubRepository struct for GithubRepository
type GithubRepository struct {
	Description *string `json:"description,omitempty"`
	FullName    *string `json:"full_name,omitempty"`
	Homepage    *string `json:"homepage,omitempty"`
	Id          *int32  `json:"id,omitempty"`
	Name        *string `json:"name,omitempty"`
	Private     *bool   `json:"private,omitempty"`
}

// NewGithubRepository instantiates a new GithubRepository object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGithubRepository() *GithubRepository {
	this := GithubRepository{}
	return &this
}

// NewGithubRepositoryWithDefaults instantiates a new GithubRepository object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGithubRepositoryWithDefaults() *GithubRepository {
	this := GithubRepository{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GithubRepository) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubRepository) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GithubRepository) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GithubRepository) SetDescription(v string) {
	o.Description = &v
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *GithubRepository) GetFullName() string {
	if o == nil || o.FullName == nil {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubRepository) GetFullNameOk() (*string, bool) {
	if o == nil || o.FullName == nil {
		return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *GithubRepository) HasFullName() bool {
	if o != nil && o.FullName != nil {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *GithubRepository) SetFullName(v string) {
	o.FullName = &v
}

// GetHomepage returns the Homepage field value if set, zero value otherwise.
func (o *GithubRepository) GetHomepage() string {
	if o == nil || o.Homepage == nil {
		var ret string
		return ret
	}
	return *o.Homepage
}

// GetHomepageOk returns a tuple with the Homepage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubRepository) GetHomepageOk() (*string, bool) {
	if o == nil || o.Homepage == nil {
		return nil, false
	}
	return o.Homepage, true
}

// HasHomepage returns a boolean if a field has been set.
func (o *GithubRepository) HasHomepage() bool {
	if o != nil && o.Homepage != nil {
		return true
	}

	return false
}

// SetHomepage gets a reference to the given string and assigns it to the Homepage field.
func (o *GithubRepository) SetHomepage(v string) {
	o.Homepage = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GithubRepository) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubRepository) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GithubRepository) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GithubRepository) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GithubRepository) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubRepository) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GithubRepository) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GithubRepository) SetName(v string) {
	o.Name = &v
}

// GetPrivate returns the Private field value if set, zero value otherwise.
func (o *GithubRepository) GetPrivate() bool {
	if o == nil || o.Private == nil {
		var ret bool
		return ret
	}
	return *o.Private
}

// GetPrivateOk returns a tuple with the Private field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubRepository) GetPrivateOk() (*bool, bool) {
	if o == nil || o.Private == nil {
		return nil, false
	}
	return o.Private, true
}

// HasPrivate returns a boolean if a field has been set.
func (o *GithubRepository) HasPrivate() bool {
	if o != nil && o.Private != nil {
		return true
	}

	return false
}

// SetPrivate gets a reference to the given bool and assigns it to the Private field.
func (o *GithubRepository) SetPrivate(v bool) {
	o.Private = &v
}

func (o GithubRepository) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.FullName != nil {
		toSerialize["full_name"] = o.FullName
	}
	if o.Homepage != nil {
		toSerialize["homepage"] = o.Homepage
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Private != nil {
		toSerialize["private"] = o.Private
	}
	return json.Marshal(toSerialize)
}

type NullableGithubRepository struct {
	value *GithubRepository
	isSet bool
}

func (v NullableGithubRepository) Get() *GithubRepository {
	return v.value
}

func (v *NullableGithubRepository) Set(val *GithubRepository) {
	v.value = val
	v.isSet = true
}

func (v NullableGithubRepository) IsSet() bool {
	return v.isSet
}

func (v *NullableGithubRepository) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGithubRepository(val *GithubRepository) *NullableGithubRepository {
	return &NullableGithubRepository{value: val, isSet: true}
}

func (v NullableGithubRepository) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGithubRepository) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
