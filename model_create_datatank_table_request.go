/*
Turbot Pipes

Turbot Pipes is an intelligence, automation & security platform built specifically for DevOps.

API version: {{OPEN_API_VERSION}}
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pipes

import (
	"encoding/json"
)

// CreateDatatankTableRequest struct for CreateDatatankTableRequest
type CreateDatatankTableRequest struct {
	Description  *string            `json:"description,omitempty"`
	Frequency    *PipelineFrequency `json:"frequency,omitempty"`
	Name         string             `json:"name"`
	PartPer      *string            `json:"part_per,omitempty"`
	SourceQuery  *string            `json:"source_query,omitempty"`
	SourceSchema *string            `json:"source_schema,omitempty"`
	SourceTable  *string            `json:"source_table,omitempty"`
	Type         string             `json:"type"`
}

// NewCreateDatatankTableRequest instantiates a new CreateDatatankTableRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDatatankTableRequest(name string, type_ string) *CreateDatatankTableRequest {
	this := CreateDatatankTableRequest{}
	this.Name = name
	this.Type = type_
	return &this
}

// NewCreateDatatankTableRequestWithDefaults instantiates a new CreateDatatankTableRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDatatankTableRequestWithDefaults() *CreateDatatankTableRequest {
	this := CreateDatatankTableRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateDatatankTableRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDatatankTableRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateDatatankTableRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateDatatankTableRequest) SetDescription(v string) {
	o.Description = &v
}

// GetFrequency returns the Frequency field value if set, zero value otherwise.
func (o *CreateDatatankTableRequest) GetFrequency() PipelineFrequency {
	if o == nil || o.Frequency == nil {
		var ret PipelineFrequency
		return ret
	}
	return *o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDatatankTableRequest) GetFrequencyOk() (*PipelineFrequency, bool) {
	if o == nil || o.Frequency == nil {
		return nil, false
	}
	return o.Frequency, true
}

// HasFrequency returns a boolean if a field has been set.
func (o *CreateDatatankTableRequest) HasFrequency() bool {
	if o != nil && o.Frequency != nil {
		return true
	}

	return false
}

// SetFrequency gets a reference to the given PipelineFrequency and assigns it to the Frequency field.
func (o *CreateDatatankTableRequest) SetFrequency(v PipelineFrequency) {
	o.Frequency = &v
}

// GetName returns the Name field value
func (o *CreateDatatankTableRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateDatatankTableRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateDatatankTableRequest) SetName(v string) {
	o.Name = v
}

// GetPartPer returns the PartPer field value if set, zero value otherwise.
func (o *CreateDatatankTableRequest) GetPartPer() string {
	if o == nil || o.PartPer == nil {
		var ret string
		return ret
	}
	return *o.PartPer
}

// GetPartPerOk returns a tuple with the PartPer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDatatankTableRequest) GetPartPerOk() (*string, bool) {
	if o == nil || o.PartPer == nil {
		return nil, false
	}
	return o.PartPer, true
}

// HasPartPer returns a boolean if a field has been set.
func (o *CreateDatatankTableRequest) HasPartPer() bool {
	if o != nil && o.PartPer != nil {
		return true
	}

	return false
}

// SetPartPer gets a reference to the given string and assigns it to the PartPer field.
func (o *CreateDatatankTableRequest) SetPartPer(v string) {
	o.PartPer = &v
}

// GetSourceQuery returns the SourceQuery field value if set, zero value otherwise.
func (o *CreateDatatankTableRequest) GetSourceQuery() string {
	if o == nil || o.SourceQuery == nil {
		var ret string
		return ret
	}
	return *o.SourceQuery
}

// GetSourceQueryOk returns a tuple with the SourceQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDatatankTableRequest) GetSourceQueryOk() (*string, bool) {
	if o == nil || o.SourceQuery == nil {
		return nil, false
	}
	return o.SourceQuery, true
}

// HasSourceQuery returns a boolean if a field has been set.
func (o *CreateDatatankTableRequest) HasSourceQuery() bool {
	if o != nil && o.SourceQuery != nil {
		return true
	}

	return false
}

// SetSourceQuery gets a reference to the given string and assigns it to the SourceQuery field.
func (o *CreateDatatankTableRequest) SetSourceQuery(v string) {
	o.SourceQuery = &v
}

// GetSourceSchema returns the SourceSchema field value if set, zero value otherwise.
func (o *CreateDatatankTableRequest) GetSourceSchema() string {
	if o == nil || o.SourceSchema == nil {
		var ret string
		return ret
	}
	return *o.SourceSchema
}

// GetSourceSchemaOk returns a tuple with the SourceSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDatatankTableRequest) GetSourceSchemaOk() (*string, bool) {
	if o == nil || o.SourceSchema == nil {
		return nil, false
	}
	return o.SourceSchema, true
}

// HasSourceSchema returns a boolean if a field has been set.
func (o *CreateDatatankTableRequest) HasSourceSchema() bool {
	if o != nil && o.SourceSchema != nil {
		return true
	}

	return false
}

// SetSourceSchema gets a reference to the given string and assigns it to the SourceSchema field.
func (o *CreateDatatankTableRequest) SetSourceSchema(v string) {
	o.SourceSchema = &v
}

// GetSourceTable returns the SourceTable field value if set, zero value otherwise.
func (o *CreateDatatankTableRequest) GetSourceTable() string {
	if o == nil || o.SourceTable == nil {
		var ret string
		return ret
	}
	return *o.SourceTable
}

// GetSourceTableOk returns a tuple with the SourceTable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDatatankTableRequest) GetSourceTableOk() (*string, bool) {
	if o == nil || o.SourceTable == nil {
		return nil, false
	}
	return o.SourceTable, true
}

// HasSourceTable returns a boolean if a field has been set.
func (o *CreateDatatankTableRequest) HasSourceTable() bool {
	if o != nil && o.SourceTable != nil {
		return true
	}

	return false
}

// SetSourceTable gets a reference to the given string and assigns it to the SourceTable field.
func (o *CreateDatatankTableRequest) SetSourceTable(v string) {
	o.SourceTable = &v
}

// GetType returns the Type field value
func (o *CreateDatatankTableRequest) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreateDatatankTableRequest) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CreateDatatankTableRequest) SetType(v string) {
	o.Type = v
}

func (o CreateDatatankTableRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Frequency != nil {
		toSerialize["frequency"] = o.Frequency
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.PartPer != nil {
		toSerialize["part_per"] = o.PartPer
	}
	if o.SourceQuery != nil {
		toSerialize["source_query"] = o.SourceQuery
	}
	if o.SourceSchema != nil {
		toSerialize["source_schema"] = o.SourceSchema
	}
	if o.SourceTable != nil {
		toSerialize["source_table"] = o.SourceTable
	}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableCreateDatatankTableRequest struct {
	value *CreateDatatankTableRequest
	isSet bool
}

func (v NullableCreateDatatankTableRequest) Get() *CreateDatatankTableRequest {
	return v.value
}

func (v *NullableCreateDatatankTableRequest) Set(val *CreateDatatankTableRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDatatankTableRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDatatankTableRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDatatankTableRequest(val *CreateDatatankTableRequest) *NullableCreateDatatankTableRequest {
	return &NullableCreateDatatankTableRequest{value: val, isSet: true}
}

func (v NullableCreateDatatankTableRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDatatankTableRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
