/*
Turbot Pipes

Turbot Pipes is an intelligence, automation & security platform built specifically for DevOps.

API version: {{OPEN_API_VERSION}}
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pipes

import (
	"encoding/json"
)

// WorkspaceProcessCommandResponse struct for WorkspaceProcessCommandResponse
type WorkspaceProcessCommandResponse struct {
	Command WorkspaceProcessCommandAction `json:"command"`
}

// NewWorkspaceProcessCommandResponse instantiates a new WorkspaceProcessCommandResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkspaceProcessCommandResponse(command WorkspaceProcessCommandAction) *WorkspaceProcessCommandResponse {
	this := WorkspaceProcessCommandResponse{}
	this.Command = command
	return &this
}

// NewWorkspaceProcessCommandResponseWithDefaults instantiates a new WorkspaceProcessCommandResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkspaceProcessCommandResponseWithDefaults() *WorkspaceProcessCommandResponse {
	this := WorkspaceProcessCommandResponse{}
	return &this
}

// GetCommand returns the Command field value
func (o *WorkspaceProcessCommandResponse) GetCommand() WorkspaceProcessCommandAction {
	if o == nil {
		var ret WorkspaceProcessCommandAction
		return ret
	}

	return o.Command
}

// GetCommandOk returns a tuple with the Command field value
// and a boolean to check if the value has been set.
func (o *WorkspaceProcessCommandResponse) GetCommandOk() (*WorkspaceProcessCommandAction, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Command, true
}

// SetCommand sets field value
func (o *WorkspaceProcessCommandResponse) SetCommand(v WorkspaceProcessCommandAction) {
	o.Command = v
}

func (o WorkspaceProcessCommandResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["command"] = o.Command
	}
	return json.Marshal(toSerialize)
}

type NullableWorkspaceProcessCommandResponse struct {
	value *WorkspaceProcessCommandResponse
	isSet bool
}

func (v NullableWorkspaceProcessCommandResponse) Get() *WorkspaceProcessCommandResponse {
	return v.value
}

func (v *NullableWorkspaceProcessCommandResponse) Set(val *WorkspaceProcessCommandResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkspaceProcessCommandResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkspaceProcessCommandResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkspaceProcessCommandResponse(val *WorkspaceProcessCommandResponse) *NullableWorkspaceProcessCommandResponse {
	return &NullableWorkspaceProcessCommandResponse{value: val, isSet: true}
}

func (v NullableWorkspaceProcessCommandResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkspaceProcessCommandResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
