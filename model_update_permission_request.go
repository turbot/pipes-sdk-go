/*
Turbot Pipes

Turbot Pipes is an intelligence, automation & security platform built specifically for DevOps.

API version: {{OPEN_API_VERSION}}
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pipes

import (
	"encoding/json"
)

// UpdatePermissionRequest struct for UpdatePermissionRequest
type UpdatePermissionRequest struct {
	IdentityHandle  *string `json:"identity_handle,omitempty"`
	TenantHandle    *string `json:"tenant_handle,omitempty"`
	WorkspaceHandle *string `json:"workspace_handle,omitempty"`
}

// NewUpdatePermissionRequest instantiates a new UpdatePermissionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatePermissionRequest() *UpdatePermissionRequest {
	this := UpdatePermissionRequest{}
	return &this
}

// NewUpdatePermissionRequestWithDefaults instantiates a new UpdatePermissionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatePermissionRequestWithDefaults() *UpdatePermissionRequest {
	this := UpdatePermissionRequest{}
	return &this
}

// GetIdentityHandle returns the IdentityHandle field value if set, zero value otherwise.
func (o *UpdatePermissionRequest) GetIdentityHandle() string {
	if o == nil || o.IdentityHandle == nil {
		var ret string
		return ret
	}
	return *o.IdentityHandle
}

// GetIdentityHandleOk returns a tuple with the IdentityHandle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePermissionRequest) GetIdentityHandleOk() (*string, bool) {
	if o == nil || o.IdentityHandle == nil {
		return nil, false
	}
	return o.IdentityHandle, true
}

// HasIdentityHandle returns a boolean if a field has been set.
func (o *UpdatePermissionRequest) HasIdentityHandle() bool {
	if o != nil && o.IdentityHandle != nil {
		return true
	}

	return false
}

// SetIdentityHandle gets a reference to the given string and assigns it to the IdentityHandle field.
func (o *UpdatePermissionRequest) SetIdentityHandle(v string) {
	o.IdentityHandle = &v
}

// GetTenantHandle returns the TenantHandle field value if set, zero value otherwise.
func (o *UpdatePermissionRequest) GetTenantHandle() string {
	if o == nil || o.TenantHandle == nil {
		var ret string
		return ret
	}
	return *o.TenantHandle
}

// GetTenantHandleOk returns a tuple with the TenantHandle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePermissionRequest) GetTenantHandleOk() (*string, bool) {
	if o == nil || o.TenantHandle == nil {
		return nil, false
	}
	return o.TenantHandle, true
}

// HasTenantHandle returns a boolean if a field has been set.
func (o *UpdatePermissionRequest) HasTenantHandle() bool {
	if o != nil && o.TenantHandle != nil {
		return true
	}

	return false
}

// SetTenantHandle gets a reference to the given string and assigns it to the TenantHandle field.
func (o *UpdatePermissionRequest) SetTenantHandle(v string) {
	o.TenantHandle = &v
}

// GetWorkspaceHandle returns the WorkspaceHandle field value if set, zero value otherwise.
func (o *UpdatePermissionRequest) GetWorkspaceHandle() string {
	if o == nil || o.WorkspaceHandle == nil {
		var ret string
		return ret
	}
	return *o.WorkspaceHandle
}

// GetWorkspaceHandleOk returns a tuple with the WorkspaceHandle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePermissionRequest) GetWorkspaceHandleOk() (*string, bool) {
	if o == nil || o.WorkspaceHandle == nil {
		return nil, false
	}
	return o.WorkspaceHandle, true
}

// HasWorkspaceHandle returns a boolean if a field has been set.
func (o *UpdatePermissionRequest) HasWorkspaceHandle() bool {
	if o != nil && o.WorkspaceHandle != nil {
		return true
	}

	return false
}

// SetWorkspaceHandle gets a reference to the given string and assigns it to the WorkspaceHandle field.
func (o *UpdatePermissionRequest) SetWorkspaceHandle(v string) {
	o.WorkspaceHandle = &v
}

func (o UpdatePermissionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IdentityHandle != nil {
		toSerialize["identity_handle"] = o.IdentityHandle
	}
	if o.TenantHandle != nil {
		toSerialize["tenant_handle"] = o.TenantHandle
	}
	if o.WorkspaceHandle != nil {
		toSerialize["workspace_handle"] = o.WorkspaceHandle
	}
	return json.Marshal(toSerialize)
}

type NullableUpdatePermissionRequest struct {
	value *UpdatePermissionRequest
	isSet bool
}

func (v NullableUpdatePermissionRequest) Get() *UpdatePermissionRequest {
	return v.value
}

func (v *NullableUpdatePermissionRequest) Set(val *UpdatePermissionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatePermissionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatePermissionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatePermissionRequest(val *UpdatePermissionRequest) *NullableUpdatePermissionRequest {
	return &NullableUpdatePermissionRequest{value: val, isSet: true}
}

func (v NullableUpdatePermissionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatePermissionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
