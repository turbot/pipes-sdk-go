/*
Turbot Pipes

Turbot Pipes is an intelligence, automation & security platform built specifically for DevOps.

API version: {{OPEN_API_VERSION}}
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pipes

import (
	"encoding/json"
)

// UpdateTenantLoginSettings struct for UpdateTenantLoginSettings
type UpdateTenantLoginSettings struct {
	// The updated state of the login method.
	State string `json:"state"`
}

// NewUpdateTenantLoginSettings instantiates a new UpdateTenantLoginSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTenantLoginSettings(state string) *UpdateTenantLoginSettings {
	this := UpdateTenantLoginSettings{}
	this.State = state
	return &this
}

// NewUpdateTenantLoginSettingsWithDefaults instantiates a new UpdateTenantLoginSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTenantLoginSettingsWithDefaults() *UpdateTenantLoginSettings {
	this := UpdateTenantLoginSettings{}
	return &this
}

// GetState returns the State field value
func (o *UpdateTenantLoginSettings) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *UpdateTenantLoginSettings) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *UpdateTenantLoginSettings) SetState(v string) {
	o.State = v
}

func (o UpdateTenantLoginSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateTenantLoginSettings struct {
	value *UpdateTenantLoginSettings
	isSet bool
}

func (v NullableUpdateTenantLoginSettings) Get() *UpdateTenantLoginSettings {
	return v.value
}

func (v *NullableUpdateTenantLoginSettings) Set(val *UpdateTenantLoginSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTenantLoginSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTenantLoginSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTenantLoginSettings(val *UpdateTenantLoginSettings) *NullableUpdateTenantLoginSettings {
	return &NullableUpdateTenantLoginSettings{value: val, isSet: true}
}

func (v NullableUpdateTenantLoginSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTenantLoginSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
