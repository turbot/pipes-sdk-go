/*
Turbot Pipes

Turbot Pipes is an intelligence, automation & security platform built specifically for DevOps.

API version: {{OPEN_API_VERSION}}
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pipes

import (
	"encoding/json"
)

// UpdateDatatankRequest struct for UpdateDatatankRequest
type UpdateDatatankRequest struct {
	Description  *string `json:"description,omitempty"`
	DesiredState *string `json:"desired_state,omitempty"`
}

// NewUpdateDatatankRequest instantiates a new UpdateDatatankRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateDatatankRequest() *UpdateDatatankRequest {
	this := UpdateDatatankRequest{}
	return &this
}

// NewUpdateDatatankRequestWithDefaults instantiates a new UpdateDatatankRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateDatatankRequestWithDefaults() *UpdateDatatankRequest {
	this := UpdateDatatankRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateDatatankRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDatatankRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateDatatankRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateDatatankRequest) SetDescription(v string) {
	o.Description = &v
}

// GetDesiredState returns the DesiredState field value if set, zero value otherwise.
func (o *UpdateDatatankRequest) GetDesiredState() string {
	if o == nil || o.DesiredState == nil {
		var ret string
		return ret
	}
	return *o.DesiredState
}

// GetDesiredStateOk returns a tuple with the DesiredState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDatatankRequest) GetDesiredStateOk() (*string, bool) {
	if o == nil || o.DesiredState == nil {
		return nil, false
	}
	return o.DesiredState, true
}

// HasDesiredState returns a boolean if a field has been set.
func (o *UpdateDatatankRequest) HasDesiredState() bool {
	if o != nil && o.DesiredState != nil {
		return true
	}

	return false
}

// SetDesiredState gets a reference to the given string and assigns it to the DesiredState field.
func (o *UpdateDatatankRequest) SetDesiredState(v string) {
	o.DesiredState = &v
}

func (o UpdateDatatankRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.DesiredState != nil {
		toSerialize["desired_state"] = o.DesiredState
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateDatatankRequest struct {
	value *UpdateDatatankRequest
	isSet bool
}

func (v NullableUpdateDatatankRequest) Get() *UpdateDatatankRequest {
	return v.value
}

func (v *NullableUpdateDatatankRequest) Set(val *UpdateDatatankRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateDatatankRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateDatatankRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateDatatankRequest(val *UpdateDatatankRequest) *NullableUpdateDatatankRequest {
	return &NullableUpdateDatatankRequest{value: val, isSet: true}
}

func (v NullableUpdateDatatankRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateDatatankRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
