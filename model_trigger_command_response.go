/*
Turbot Pipes

Turbot Pipes is an intelligence, automation & security platform built specifically for DevOps.

API version: {{OPEN_API_VERSION}}
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pipes

import (
	"encoding/json"
)

// TriggerCommandResponse struct for TriggerCommandResponse
type TriggerCommandResponse struct {
	Command   TriggerCommandAction `json:"command"`
	ProcessId *string              `json:"process_id,omitempty"`
}

// NewTriggerCommandResponse instantiates a new TriggerCommandResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTriggerCommandResponse(command TriggerCommandAction) *TriggerCommandResponse {
	this := TriggerCommandResponse{}
	this.Command = command
	return &this
}

// NewTriggerCommandResponseWithDefaults instantiates a new TriggerCommandResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTriggerCommandResponseWithDefaults() *TriggerCommandResponse {
	this := TriggerCommandResponse{}
	return &this
}

// GetCommand returns the Command field value
func (o *TriggerCommandResponse) GetCommand() TriggerCommandAction {
	if o == nil {
		var ret TriggerCommandAction
		return ret
	}

	return o.Command
}

// GetCommandOk returns a tuple with the Command field value
// and a boolean to check if the value has been set.
func (o *TriggerCommandResponse) GetCommandOk() (*TriggerCommandAction, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Command, true
}

// SetCommand sets field value
func (o *TriggerCommandResponse) SetCommand(v TriggerCommandAction) {
	o.Command = v
}

// GetProcessId returns the ProcessId field value if set, zero value otherwise.
func (o *TriggerCommandResponse) GetProcessId() string {
	if o == nil || o.ProcessId == nil {
		var ret string
		return ret
	}
	return *o.ProcessId
}

// GetProcessIdOk returns a tuple with the ProcessId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TriggerCommandResponse) GetProcessIdOk() (*string, bool) {
	if o == nil || o.ProcessId == nil {
		return nil, false
	}
	return o.ProcessId, true
}

// HasProcessId returns a boolean if a field has been set.
func (o *TriggerCommandResponse) HasProcessId() bool {
	if o != nil && o.ProcessId != nil {
		return true
	}

	return false
}

// SetProcessId gets a reference to the given string and assigns it to the ProcessId field.
func (o *TriggerCommandResponse) SetProcessId(v string) {
	o.ProcessId = &v
}

func (o TriggerCommandResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["command"] = o.Command
	}
	if o.ProcessId != nil {
		toSerialize["process_id"] = o.ProcessId
	}
	return json.Marshal(toSerialize)
}

type NullableTriggerCommandResponse struct {
	value *TriggerCommandResponse
	isSet bool
}

func (v NullableTriggerCommandResponse) Get() *TriggerCommandResponse {
	return v.value
}

func (v *NullableTriggerCommandResponse) Set(val *TriggerCommandResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTriggerCommandResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTriggerCommandResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTriggerCommandResponse(val *TriggerCommandResponse) *NullableTriggerCommandResponse {
	return &NullableTriggerCommandResponse{value: val, isSet: true}
}

func (v NullableTriggerCommandResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTriggerCommandResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
